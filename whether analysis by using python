{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "74c2ffda",
   "metadata": {
    "papermill": {
     "duration": 0.018647,
     "end_time": "2023-11-23T09:56:34.490161",
     "exception": false,
     "start_time": "2023-11-23T09:56:34.471514",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "WORKING ON A REAL PROJECT WITH PYTHON\n",
    "\n",
    "Exploring Seattle's Weather Data\n",
    "\n",
    "I'm diving into a practical project using Python to analyze the Seattle Weather dataset, a collection of time-stamped information on precipitation, temperature (both high and low), wind speed, and weather conditions. The data, sourced from Kaggle in a CSV format, will be  examined using Pandas DataFrame. The goal is to uncover meaningful insights and patterns in Seattle's weather over time, making this a hands-on exploration of real-world data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c4f355fd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:34.527430Z",
     "iopub.status.busy": "2023-11-23T09:56:34.526965Z",
     "iopub.status.idle": "2023-11-23T09:56:35.017513Z",
     "shell.execute_reply": "2023-11-23T09:56:35.016149Z"
    },
    "papermill": {
     "duration": 0.513604,
     "end_time": "2023-11-23T09:56:35.021364",
     "exception": false,
     "start_time": "2023-11-23T09:56:34.507760",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "76a6d32f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:35.058119Z",
     "iopub.status.busy": "2023-11-23T09:56:35.057456Z",
     "iopub.status.idle": "2023-11-23T09:56:35.119411Z",
     "shell.execute_reply": "2023-11-23T09:56:35.118278Z"
    },
    "papermill": {
     "duration": 0.08355,
     "end_time": "2023-11-23T09:56:35.122225",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.038675",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012-01-01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.8</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.7</td>\n",
       "      <td>drizzle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-01-02</td>\n",
       "      <td>10.9</td>\n",
       "      <td>10.6</td>\n",
       "      <td>2.8</td>\n",
       "      <td>4.5</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-01-03</td>\n",
       "      <td>0.8</td>\n",
       "      <td>11.7</td>\n",
       "      <td>7.2</td>\n",
       "      <td>2.3</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-01-04</td>\n",
       "      <td>20.3</td>\n",
       "      <td>12.2</td>\n",
       "      <td>5.6</td>\n",
       "      <td>4.7</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012-01-05</td>\n",
       "      <td>1.3</td>\n",
       "      <td>8.9</td>\n",
       "      <td>2.8</td>\n",
       "      <td>6.1</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1456</th>\n",
       "      <td>2015-12-27</td>\n",
       "      <td>8.6</td>\n",
       "      <td>4.4</td>\n",
       "      <td>1.7</td>\n",
       "      <td>2.9</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1457</th>\n",
       "      <td>2015-12-28</td>\n",
       "      <td>1.5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>1.3</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1458</th>\n",
       "      <td>2015-12-29</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.2</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.6</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1459</th>\n",
       "      <td>2015-12-30</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.6</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>3.4</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1460</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.6</td>\n",
       "      <td>-2.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1461 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  precipitation  temp_max  temp_min  wind  weather\n",
       "0     2012-01-01            0.0      12.8       5.0   4.7  drizzle\n",
       "1     2012-01-02           10.9      10.6       2.8   4.5     rain\n",
       "2     2012-01-03            0.8      11.7       7.2   2.3     rain\n",
       "3     2012-01-04           20.3      12.2       5.6   4.7     rain\n",
       "4     2012-01-05            1.3       8.9       2.8   6.1     rain\n",
       "...          ...            ...       ...       ...   ...      ...\n",
       "1456  2015-12-27            8.6       4.4       1.7   2.9     rain\n",
       "1457  2015-12-28            1.5       5.0       1.7   1.3     rain\n",
       "1458  2015-12-29            0.0       7.2       0.6   2.6      fog\n",
       "1459  2015-12-30            0.0       5.6      -1.0   3.4      sun\n",
       "1460  2015-12-31            0.0       5.6      -2.1   3.5      sun\n",
       "\n",
       "[1461 rows x 6 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=pd.read_csv(\"/kaggle/input/weather-prediction/seattle-weather.csv\")\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6bf2f265",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:35.160044Z",
     "iopub.status.busy": "2023-11-23T09:56:35.159628Z",
     "iopub.status.idle": "2023-11-23T09:56:35.173600Z",
     "shell.execute_reply": "2023-11-23T09:56:35.172429Z"
    },
    "papermill": {
     "duration": 0.036443,
     "end_time": "2023-11-23T09:56:35.176195",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.139752",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012-01-01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.8</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.7</td>\n",
       "      <td>drizzle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-01-02</td>\n",
       "      <td>10.9</td>\n",
       "      <td>10.6</td>\n",
       "      <td>2.8</td>\n",
       "      <td>4.5</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         date  precipitation  temp_max  temp_min  wind  weather\n",
       "0  2012-01-01            0.0      12.8       5.0   4.7  drizzle\n",
       "1  2012-01-02           10.9      10.6       2.8   4.5     rain"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.head(2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d4fcddaa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:35.215121Z",
     "iopub.status.busy": "2023-11-23T09:56:35.214484Z",
     "iopub.status.idle": "2023-11-23T09:56:35.221470Z",
     "shell.execute_reply": "2023-11-23T09:56:35.220151Z"
    },
    "papermill": {
     "duration": 0.029863,
     "end_time": "2023-11-23T09:56:35.224252",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.194389",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RangeIndex(start=0, stop=1461, step=1)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.index"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "feefc357",
   "metadata": {
    "papermill": {
     "duration": 0.018347,
     "end_time": "2023-11-23T09:56:35.261660",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.243313",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Columns     # It shows the name of each column**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c18cbc64",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:35.301195Z",
     "iopub.status.busy": "2023-11-23T09:56:35.300811Z",
     "iopub.status.idle": "2023-11-23T09:56:35.308511Z",
     "shell.execute_reply": "2023-11-23T09:56:35.307146Z"
    },
    "papermill": {
     "duration": 0.030608,
     "end_time": "2023-11-23T09:56:35.311131",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.280523",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['date', 'precipitation', 'temp_max', 'temp_min', 'wind', 'weather'], dtype='object')"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dca59f64",
   "metadata": {
    "papermill": {
     "duration": 0.02033,
     "end_time": "2023-11-23T09:56:35.350277",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.329947",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**dtypes   #It shows the data-type of each column**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "abd9afe7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:35.390325Z",
     "iopub.status.busy": "2023-11-23T09:56:35.389588Z",
     "iopub.status.idle": "2023-11-23T09:56:35.398363Z",
     "shell.execute_reply": "2023-11-23T09:56:35.396997Z"
    },
    "papermill": {
     "duration": 0.032151,
     "end_time": "2023-11-23T09:56:35.401067",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.368916",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date              object\n",
       "precipitation    float64\n",
       "temp_max         float64\n",
       "temp_min         float64\n",
       "wind             float64\n",
       "weather           object\n",
       "dtype: object"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0041ff2",
   "metadata": {
    "papermill": {
     "duration": 0.018714,
     "end_time": "2023-11-23T09:56:35.439300",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.420586",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**unique()   #it is used to display the unique values ,it can be used on single column only not on all the dataframe.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "30a31958",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:35.479876Z",
     "iopub.status.busy": "2023-11-23T09:56:35.479453Z",
     "iopub.status.idle": "2023-11-23T09:56:35.493137Z",
     "shell.execute_reply": "2023-11-23T09:56:35.491969Z"
    },
    "papermill": {
     "duration": 0.037128,
     "end_time": "2023-11-23T09:56:35.495486",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.458358",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['drizzle', 'rain', 'sun', 'snow', 'fog'], dtype=object)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a['weather'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "227d2cc4",
   "metadata": {
    "papermill": {
     "duration": 0.11494,
     "end_time": "2023-11-23T09:56:35.629650",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.514710",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**nunique()      #it shows the total no of unique values in each column , it can be applied to single column  as well as on a whole dataframe**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "db523676",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:35.671071Z",
     "iopub.status.busy": "2023-11-23T09:56:35.670598Z",
     "iopub.status.idle": "2023-11-23T09:56:35.681660Z",
     "shell.execute_reply": "2023-11-23T09:56:35.680507Z"
    },
    "papermill": {
     "duration": 0.034871,
     "end_time": "2023-11-23T09:56:35.684062",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.649191",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date             1461\n",
       "precipitation     111\n",
       "temp_max           67\n",
       "temp_min           55\n",
       "wind               79\n",
       "weather             5\n",
       "dtype: int64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39992b86",
   "metadata": {
    "papermill": {
     "duration": 0.019334,
     "end_time": "2023-11-23T09:56:35.723170",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.703836",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**count    #It shows the total no of non null in each column,it can be applied to single column  as well as on a whole dataframe****"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "fcc19c86",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:35.766324Z",
     "iopub.status.busy": "2023-11-23T09:56:35.765474Z",
     "iopub.status.idle": "2023-11-23T09:56:35.779330Z",
     "shell.execute_reply": "2023-11-23T09:56:35.777951Z"
    },
    "papermill": {
     "duration": 0.039505,
     "end_time": "2023-11-23T09:56:35.782401",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.742896",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date             1461\n",
       "precipitation    1461\n",
       "temp_max         1461\n",
       "temp_min         1461\n",
       "wind             1461\n",
       "weather          1461\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.count()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "38974cf5",
   "metadata": {
    "papermill": {
     "duration": 0.019832,
     "end_time": "2023-11-23T09:56:35.822802",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.802970",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**value_counts      #In a column it shows all the unique values with their count.It can be applied on single column only**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a824a94a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:35.866547Z",
     "iopub.status.busy": "2023-11-23T09:56:35.866158Z",
     "iopub.status.idle": "2023-11-23T09:56:35.879277Z",
     "shell.execute_reply": "2023-11-23T09:56:35.877912Z"
    },
    "papermill": {
     "duration": 0.037984,
     "end_time": "2023-11-23T09:56:35.882641",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.844657",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "weather\n",
       "rain       641\n",
       "sun        640\n",
       "fog        101\n",
       "drizzle     53\n",
       "snow        26\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a['weather'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc8ea6c2",
   "metadata": {
    "papermill": {
     "duration": 0.020028,
     "end_time": "2023-11-23T09:56:35.923379",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.903351",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**info()   #Provides the basic information about the dataframe**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ab09d930",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:35.967569Z",
     "iopub.status.busy": "2023-11-23T09:56:35.966859Z",
     "iopub.status.idle": "2023-11-23T09:56:35.987293Z",
     "shell.execute_reply": "2023-11-23T09:56:35.985984Z"
    },
    "papermill": {
     "duration": 0.046182,
     "end_time": "2023-11-23T09:56:35.990619",
     "exception": false,
     "start_time": "2023-11-23T09:56:35.944437",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1461 entries, 0 to 1460\n",
      "Data columns (total 6 columns):\n",
      " #   Column         Non-Null Count  Dtype  \n",
      "---  ------         --------------  -----  \n",
      " 0   date           1461 non-null   object \n",
      " 1   precipitation  1461 non-null   float64\n",
      " 2   temp_max       1461 non-null   float64\n",
      " 3   temp_min       1461 non-null   float64\n",
      " 4   wind           1461 non-null   float64\n",
      " 5   weather        1461 non-null   object \n",
      "dtypes: float64(4), object(2)\n",
      "memory usage: 68.6+ KB\n"
     ]
    }
   ],
   "source": [
    "a.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c6613951",
   "metadata": {
    "papermill": {
     "duration": 0.019946,
     "end_time": "2023-11-23T09:56:36.031292",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.011346",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "b3ba5e12",
   "metadata": {
    "papermill": {
     "duration": 0.020183,
     "end_time": "2023-11-23T09:56:36.072398",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.052215",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Describe()   #is used to desribe the count,mean std,max etc of all the columns** (used to generate descriptive statistics of a DataFrame or Series)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "cc3b22fb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:36.116236Z",
     "iopub.status.busy": "2023-11-23T09:56:36.115581Z",
     "iopub.status.idle": "2023-11-23T09:56:36.142445Z",
     "shell.execute_reply": "2023-11-23T09:56:36.141360Z"
    },
    "papermill": {
     "duration": 0.051786,
     "end_time": "2023-11-23T09:56:36.145102",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.093316",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1461.000000</td>\n",
       "      <td>1461.000000</td>\n",
       "      <td>1461.000000</td>\n",
       "      <td>1461.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>3.029432</td>\n",
       "      <td>16.439083</td>\n",
       "      <td>8.234771</td>\n",
       "      <td>3.241136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>6.680194</td>\n",
       "      <td>7.349758</td>\n",
       "      <td>5.023004</td>\n",
       "      <td>1.437825</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>-1.600000</td>\n",
       "      <td>-7.100000</td>\n",
       "      <td>0.400000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>10.600000</td>\n",
       "      <td>4.400000</td>\n",
       "      <td>2.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>15.600000</td>\n",
       "      <td>8.300000</td>\n",
       "      <td>3.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2.800000</td>\n",
       "      <td>22.200000</td>\n",
       "      <td>12.200000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>55.900000</td>\n",
       "      <td>35.600000</td>\n",
       "      <td>18.300000</td>\n",
       "      <td>9.500000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       precipitation     temp_max     temp_min         wind\n",
       "count    1461.000000  1461.000000  1461.000000  1461.000000\n",
       "mean        3.029432    16.439083     8.234771     3.241136\n",
       "std         6.680194     7.349758     5.023004     1.437825\n",
       "min         0.000000    -1.600000    -7.100000     0.400000\n",
       "25%         0.000000    10.600000     4.400000     2.200000\n",
       "50%         0.000000    15.600000     8.300000     3.000000\n",
       "75%         2.800000    22.200000    12.200000     4.000000\n",
       "max        55.900000    35.600000    18.300000     9.500000"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "34df5ca5",
   "metadata": {
    "papermill": {
     "duration": 0.020583,
     "end_time": "2023-11-23T09:56:36.187059",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.166476",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 1)          Find all the unique \"wind\" values in the data**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0831c897",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:36.233329Z",
     "iopub.status.busy": "2023-11-23T09:56:36.232900Z",
     "iopub.status.idle": "2023-11-23T09:56:36.243447Z",
     "shell.execute_reply": "2023-11-23T09:56:36.241972Z"
    },
    "papermill": {
     "duration": 0.035916,
     "end_time": "2023-11-23T09:56:36.246310",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.210394",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([4.7, 4.5, 2.3, 6.1, 2.2, 2. , 3.4, 5.1, 1.9, 1.3, 5.3, 3.2, 5. ,\n",
       "       5.6, 1.6, 8.2, 4.8, 3.6, 5.4, 1.4, 3.9, 2.7, 2.6, 4.3, 2.9, 2.4,\n",
       "       3. , 3.1, 1.8, 2.1, 8.1, 7.5, 5.9, 3.5, 6.4, 4.2, 7. , 6.2, 2.5,\n",
       "       2.8, 5.8, 3.8, 5.2, 4.4, 6.8, 4.1, 4. , 8. , 4.6, 1.5, 6.3, 3.3,\n",
       "       3.7, 1.7, 6. , 1.1, 7.3, 6.5, 5.7, 5.5, 4.9, 1. , 1.2, 9.5, 0.6,\n",
       "       7.1, 7.6, 0.9, 0.4, 7.9, 7.2, 0.5, 0.7, 8.8, 0.8, 6.6, 6.9, 6.7,\n",
       "       7.7])"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.head(2)\n",
    "a[\"wind\"].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c877e7a3",
   "metadata": {
    "papermill": {
     "duration": 0.020704,
     "end_time": "2023-11-23T09:56:36.288584",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.267880",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "or"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "b285c4eb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:36.333773Z",
     "iopub.status.busy": "2023-11-23T09:56:36.333293Z",
     "iopub.status.idle": "2023-11-23T09:56:36.344801Z",
     "shell.execute_reply": "2023-11-23T09:56:36.343577Z"
    },
    "papermill": {
     "duration": 0.036962,
     "end_time": "2023-11-23T09:56:36.347486",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.310524",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date             1461\n",
       "precipitation     111\n",
       "temp_max           67\n",
       "temp_min           55\n",
       "wind               79\n",
       "weather             5\n",
       "dtype: int64"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7754813f",
   "metadata": {
    "papermill": {
     "duration": 0.021177,
     "end_time": "2023-11-23T09:56:36.391216",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.370039",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "or"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "de377c02",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:36.436715Z",
     "iopub.status.busy": "2023-11-23T09:56:36.436212Z",
     "iopub.status.idle": "2023-11-23T09:56:36.445189Z",
     "shell.execute_reply": "2023-11-23T09:56:36.443843Z"
    },
    "papermill": {
     "duration": 0.034746,
     "end_time": "2023-11-23T09:56:36.447920",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.413174",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "79"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a['wind'].nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5bf812da",
   "metadata": {
    "papermill": {
     "duration": 0.021016,
     "end_time": "2023-11-23T09:56:36.490464",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.469448",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 2)   Find the number of times when the weather is raining **"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "6687e545",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:36.535626Z",
     "iopub.status.busy": "2023-11-23T09:56:36.535165Z",
     "iopub.status.idle": "2023-11-23T09:56:36.545341Z",
     "shell.execute_reply": "2023-11-23T09:56:36.544104Z"
    },
    "papermill": {
     "duration": 0.035495,
     "end_time": "2023-11-23T09:56:36.547742",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.512247",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "weather\n",
       "rain       641\n",
       "sun        640\n",
       "fog        101\n",
       "drizzle     53\n",
       "snow        26\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#value_counts()\n",
    "a['weather'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "e5cf5133",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:36.593492Z",
     "iopub.status.busy": "2023-11-23T09:56:36.593048Z",
     "iopub.status.idle": "2023-11-23T09:56:36.615456Z",
     "shell.execute_reply": "2023-11-23T09:56:36.614541Z"
    },
    "papermill": {
     "duration": 0.048445,
     "end_time": "2023-11-23T09:56:36.617747",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.569302",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-01-02</td>\n",
       "      <td>10.9</td>\n",
       "      <td>10.6</td>\n",
       "      <td>2.8</td>\n",
       "      <td>4.5</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-01-03</td>\n",
       "      <td>0.8</td>\n",
       "      <td>11.7</td>\n",
       "      <td>7.2</td>\n",
       "      <td>2.3</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-01-04</td>\n",
       "      <td>20.3</td>\n",
       "      <td>12.2</td>\n",
       "      <td>5.6</td>\n",
       "      <td>4.7</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012-01-05</td>\n",
       "      <td>1.3</td>\n",
       "      <td>8.9</td>\n",
       "      <td>2.8</td>\n",
       "      <td>6.1</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2012-01-06</td>\n",
       "      <td>2.5</td>\n",
       "      <td>4.4</td>\n",
       "      <td>2.2</td>\n",
       "      <td>2.2</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1452</th>\n",
       "      <td>2015-12-23</td>\n",
       "      <td>6.1</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.8</td>\n",
       "      <td>7.6</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1453</th>\n",
       "      <td>2015-12-24</td>\n",
       "      <td>2.5</td>\n",
       "      <td>5.6</td>\n",
       "      <td>2.2</td>\n",
       "      <td>4.3</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1454</th>\n",
       "      <td>2015-12-25</td>\n",
       "      <td>5.8</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>1.5</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1456</th>\n",
       "      <td>2015-12-27</td>\n",
       "      <td>8.6</td>\n",
       "      <td>4.4</td>\n",
       "      <td>1.7</td>\n",
       "      <td>2.9</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1457</th>\n",
       "      <td>2015-12-28</td>\n",
       "      <td>1.5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>1.3</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>641 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  precipitation  temp_max  temp_min  wind weather\n",
       "1     2012-01-02           10.9      10.6       2.8   4.5    rain\n",
       "2     2012-01-03            0.8      11.7       7.2   2.3    rain\n",
       "3     2012-01-04           20.3      12.2       5.6   4.7    rain\n",
       "4     2012-01-05            1.3       8.9       2.8   6.1    rain\n",
       "5     2012-01-06            2.5       4.4       2.2   2.2    rain\n",
       "...          ...            ...       ...       ...   ...     ...\n",
       "1452  2015-12-23            6.1       5.0       2.8   7.6    rain\n",
       "1453  2015-12-24            2.5       5.6       2.2   4.3    rain\n",
       "1454  2015-12-25            5.8       5.0       2.2   1.5    rain\n",
       "1456  2015-12-27            8.6       4.4       1.7   2.9    rain\n",
       "1457  2015-12-28            1.5       5.0       1.7   1.3    rain\n",
       "\n",
       "[641 rows x 6 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#filtering\n",
    "a[a.weather=='rain']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "bfc51c0f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:36.665020Z",
     "iopub.status.busy": "2023-11-23T09:56:36.664578Z",
     "iopub.status.idle": "2023-11-23T09:56:36.689151Z",
     "shell.execute_reply": "2023-11-23T09:56:36.687802Z"
    },
    "papermill": {
     "duration": 0.051209,
     "end_time": "2023-11-23T09:56:36.691850",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.640641",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-01-02</td>\n",
       "      <td>10.9</td>\n",
       "      <td>10.6</td>\n",
       "      <td>2.8</td>\n",
       "      <td>4.5</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-01-03</td>\n",
       "      <td>0.8</td>\n",
       "      <td>11.7</td>\n",
       "      <td>7.2</td>\n",
       "      <td>2.3</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-01-04</td>\n",
       "      <td>20.3</td>\n",
       "      <td>12.2</td>\n",
       "      <td>5.6</td>\n",
       "      <td>4.7</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012-01-05</td>\n",
       "      <td>1.3</td>\n",
       "      <td>8.9</td>\n",
       "      <td>2.8</td>\n",
       "      <td>6.1</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2012-01-06</td>\n",
       "      <td>2.5</td>\n",
       "      <td>4.4</td>\n",
       "      <td>2.2</td>\n",
       "      <td>2.2</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1452</th>\n",
       "      <td>2015-12-23</td>\n",
       "      <td>6.1</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.8</td>\n",
       "      <td>7.6</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1453</th>\n",
       "      <td>2015-12-24</td>\n",
       "      <td>2.5</td>\n",
       "      <td>5.6</td>\n",
       "      <td>2.2</td>\n",
       "      <td>4.3</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1454</th>\n",
       "      <td>2015-12-25</td>\n",
       "      <td>5.8</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>1.5</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1456</th>\n",
       "      <td>2015-12-27</td>\n",
       "      <td>8.6</td>\n",
       "      <td>4.4</td>\n",
       "      <td>1.7</td>\n",
       "      <td>2.9</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1457</th>\n",
       "      <td>2015-12-28</td>\n",
       "      <td>1.5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>1.3</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>641 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  precipitation  temp_max  temp_min  wind weather\n",
       "1     2012-01-02           10.9      10.6       2.8   4.5    rain\n",
       "2     2012-01-03            0.8      11.7       7.2   2.3    rain\n",
       "3     2012-01-04           20.3      12.2       5.6   4.7    rain\n",
       "4     2012-01-05            1.3       8.9       2.8   6.1    rain\n",
       "5     2012-01-06            2.5       4.4       2.2   2.2    rain\n",
       "...          ...            ...       ...       ...   ...     ...\n",
       "1452  2015-12-23            6.1       5.0       2.8   7.6    rain\n",
       "1453  2015-12-24            2.5       5.6       2.2   4.3    rain\n",
       "1454  2015-12-25            5.8       5.0       2.2   1.5    rain\n",
       "1456  2015-12-27            8.6       4.4       1.7   2.9    rain\n",
       "1457  2015-12-28            1.5       5.0       1.7   1.3    rain\n",
       "\n",
       "[641 rows x 6 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#groupby()\n",
    "a.groupby('weather').get_group('rain')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72fbdd16",
   "metadata": {
    "papermill": {
     "duration": 0.022379,
     "end_time": "2023-11-23T09:56:36.737875",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.715496",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 3)  Find the number of times when the wind speed was exactly 2**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "c5dd9dfb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:36.785637Z",
     "iopub.status.busy": "2023-11-23T09:56:36.784462Z",
     "iopub.status.idle": "2023-11-23T09:56:36.817730Z",
     "shell.execute_reply": "2023-11-23T09:56:36.816192Z"
    },
    "papermill": {
     "duration": 0.060031,
     "end_time": "2023-11-23T09:56:36.820555",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.760524",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2012-01-08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>2012-04-17</td>\n",
       "      <td>1.8</td>\n",
       "      <td>10.0</td>\n",
       "      <td>4.4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>2012-06-24</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>drizzle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>190</th>\n",
       "      <td>2012-07-09</td>\n",
       "      <td>1.5</td>\n",
       "      <td>25.0</td>\n",
       "      <td>12.8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210</th>\n",
       "      <td>2012-07-29</td>\n",
       "      <td>0.0</td>\n",
       "      <td>22.8</td>\n",
       "      <td>15.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>2012-09-02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>21.1</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>291</th>\n",
       "      <td>2012-10-18</td>\n",
       "      <td>20.8</td>\n",
       "      <td>17.8</td>\n",
       "      <td>6.7</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>313</th>\n",
       "      <td>2012-11-09</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.9</td>\n",
       "      <td>1.1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>342</th>\n",
       "      <td>2012-12-08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>3.3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>346</th>\n",
       "      <td>2012-12-12</td>\n",
       "      <td>8.1</td>\n",
       "      <td>6.7</td>\n",
       "      <td>4.4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>365</th>\n",
       "      <td>2012-12-31</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.3</td>\n",
       "      <td>-1.1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>drizzle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377</th>\n",
       "      <td>2013-01-12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.8</td>\n",
       "      <td>-3.9</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>398</th>\n",
       "      <td>2013-02-02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.1</td>\n",
       "      <td>2.8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>drizzle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>406</th>\n",
       "      <td>2013-02-10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.9</td>\n",
       "      <td>1.7</td>\n",
       "      <td>2.0</td>\n",
       "      <td>drizzle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>491</th>\n",
       "      <td>2013-05-06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.6</td>\n",
       "      <td>12.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>564</th>\n",
       "      <td>2013-07-18</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>13.9</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>566</th>\n",
       "      <td>2013-07-20</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>13.3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>579</th>\n",
       "      <td>2013-08-02</td>\n",
       "      <td>2.0</td>\n",
       "      <td>17.2</td>\n",
       "      <td>15.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>591</th>\n",
       "      <td>2013-08-14</td>\n",
       "      <td>0.8</td>\n",
       "      <td>27.2</td>\n",
       "      <td>15.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>615</th>\n",
       "      <td>2013-09-07</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.3</td>\n",
       "      <td>17.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>621</th>\n",
       "      <td>2013-09-13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.9</td>\n",
       "      <td>15.6</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>965</th>\n",
       "      <td>2014-08-23</td>\n",
       "      <td>0.0</td>\n",
       "      <td>27.8</td>\n",
       "      <td>13.9</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>967</th>\n",
       "      <td>2014-08-25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>28.9</td>\n",
       "      <td>14.4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1001</th>\n",
       "      <td>2014-09-28</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.9</td>\n",
       "      <td>12.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1005</th>\n",
       "      <td>2014-10-02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19.4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1034</th>\n",
       "      <td>2014-10-31</td>\n",
       "      <td>17.0</td>\n",
       "      <td>12.8</td>\n",
       "      <td>8.3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1122</th>\n",
       "      <td>2015-01-27</td>\n",
       "      <td>0.8</td>\n",
       "      <td>11.1</td>\n",
       "      <td>8.3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1229</th>\n",
       "      <td>2015-05-14</td>\n",
       "      <td>0.3</td>\n",
       "      <td>17.8</td>\n",
       "      <td>9.4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1309</th>\n",
       "      <td>2015-08-02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.6</td>\n",
       "      <td>16.1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1360</th>\n",
       "      <td>2015-09-22</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1386</th>\n",
       "      <td>2015-10-18</td>\n",
       "      <td>3.8</td>\n",
       "      <td>15.0</td>\n",
       "      <td>12.8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  precipitation  temp_max  temp_min  wind  weather\n",
       "7     2012-01-08            0.0      10.0       2.8   2.0      sun\n",
       "107   2012-04-17            1.8      10.0       4.4   2.0     rain\n",
       "175   2012-06-24            0.0      19.4       9.4   2.0  drizzle\n",
       "190   2012-07-09            1.5      25.0      12.8   2.0     rain\n",
       "210   2012-07-29            0.0      22.8      15.0   2.0      sun\n",
       "245   2012-09-02            0.0      21.1      10.0   2.0      sun\n",
       "291   2012-10-18           20.8      17.8       6.7   2.0     rain\n",
       "313   2012-11-09            0.0       8.9       1.1   2.0     rain\n",
       "342   2012-12-08            0.0       6.7       3.3   2.0      sun\n",
       "346   2012-12-12            8.1       6.7       4.4   2.0     rain\n",
       "365   2012-12-31            0.0       3.3      -1.1   2.0  drizzle\n",
       "377   2013-01-12            0.0       2.8      -3.9   2.0      sun\n",
       "398   2013-02-02            0.0       6.1       2.8   2.0  drizzle\n",
       "406   2013-02-10            0.0       8.9       1.7   2.0  drizzle\n",
       "491   2013-05-06            0.0      30.6      12.2   2.0      sun\n",
       "564   2013-07-18            0.0      26.1      13.9   2.0      sun\n",
       "566   2013-07-20            0.0      25.0      13.3   2.0      sun\n",
       "579   2013-08-02            2.0      17.2      15.0   2.0     rain\n",
       "591   2013-08-14            0.8      27.2      15.0   2.0     rain\n",
       "615   2013-09-07            0.0      23.3      17.2   2.0      sun\n",
       "621   2013-09-13            0.0      18.9      15.6   2.0      sun\n",
       "965   2014-08-23            0.0      27.8      13.9   2.0      sun\n",
       "967   2014-08-25            0.0      28.9      14.4   2.0      sun\n",
       "1001  2014-09-28            0.0      18.9      12.2   2.0      fog\n",
       "1005  2014-10-02            0.0      19.4      10.0   2.0      sun\n",
       "1034  2014-10-31           17.0      12.8       8.3   2.0     rain\n",
       "1122  2015-01-27            0.8      11.1       8.3   2.0     rain\n",
       "1229  2015-05-14            0.3      17.8       9.4   2.0     rain\n",
       "1309  2015-08-02            0.0      30.6      16.1   2.0      sun\n",
       "1360  2015-09-22            0.0      18.9       7.8   2.0      sun\n",
       "1386  2015-10-18            3.8      15.0      12.8   2.0     rain"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a[a['wind']== 2]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a684ef5f",
   "metadata": {
    "papermill": {
     "duration": 0.023331,
     "end_time": "2023-11-23T09:56:36.868748",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.845417",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "or"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "6fc8646e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:36.918353Z",
     "iopub.status.busy": "2023-11-23T09:56:36.917946Z",
     "iopub.status.idle": "2023-11-23T09:56:36.947462Z",
     "shell.execute_reply": "2023-11-23T09:56:36.946085Z"
    },
    "papermill": {
     "duration": 0.057741,
     "end_time": "2023-11-23T09:56:36.950000",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.892259",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2012-01-08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>2012-04-17</td>\n",
       "      <td>1.8</td>\n",
       "      <td>10.0</td>\n",
       "      <td>4.4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>175</th>\n",
       "      <td>2012-06-24</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19.4</td>\n",
       "      <td>9.4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>drizzle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>190</th>\n",
       "      <td>2012-07-09</td>\n",
       "      <td>1.5</td>\n",
       "      <td>25.0</td>\n",
       "      <td>12.8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>210</th>\n",
       "      <td>2012-07-29</td>\n",
       "      <td>0.0</td>\n",
       "      <td>22.8</td>\n",
       "      <td>15.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>245</th>\n",
       "      <td>2012-09-02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>21.1</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>291</th>\n",
       "      <td>2012-10-18</td>\n",
       "      <td>20.8</td>\n",
       "      <td>17.8</td>\n",
       "      <td>6.7</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>313</th>\n",
       "      <td>2012-11-09</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.9</td>\n",
       "      <td>1.1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>342</th>\n",
       "      <td>2012-12-08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.7</td>\n",
       "      <td>3.3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>346</th>\n",
       "      <td>2012-12-12</td>\n",
       "      <td>8.1</td>\n",
       "      <td>6.7</td>\n",
       "      <td>4.4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>365</th>\n",
       "      <td>2012-12-31</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.3</td>\n",
       "      <td>-1.1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>drizzle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>377</th>\n",
       "      <td>2013-01-12</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.8</td>\n",
       "      <td>-3.9</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>398</th>\n",
       "      <td>2013-02-02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.1</td>\n",
       "      <td>2.8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>drizzle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>406</th>\n",
       "      <td>2013-02-10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.9</td>\n",
       "      <td>1.7</td>\n",
       "      <td>2.0</td>\n",
       "      <td>drizzle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>491</th>\n",
       "      <td>2013-05-06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.6</td>\n",
       "      <td>12.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>564</th>\n",
       "      <td>2013-07-18</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.1</td>\n",
       "      <td>13.9</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>566</th>\n",
       "      <td>2013-07-20</td>\n",
       "      <td>0.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>13.3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>579</th>\n",
       "      <td>2013-08-02</td>\n",
       "      <td>2.0</td>\n",
       "      <td>17.2</td>\n",
       "      <td>15.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>591</th>\n",
       "      <td>2013-08-14</td>\n",
       "      <td>0.8</td>\n",
       "      <td>27.2</td>\n",
       "      <td>15.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>615</th>\n",
       "      <td>2013-09-07</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.3</td>\n",
       "      <td>17.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>621</th>\n",
       "      <td>2013-09-13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.9</td>\n",
       "      <td>15.6</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>965</th>\n",
       "      <td>2014-08-23</td>\n",
       "      <td>0.0</td>\n",
       "      <td>27.8</td>\n",
       "      <td>13.9</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>967</th>\n",
       "      <td>2014-08-25</td>\n",
       "      <td>0.0</td>\n",
       "      <td>28.9</td>\n",
       "      <td>14.4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1001</th>\n",
       "      <td>2014-09-28</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.9</td>\n",
       "      <td>12.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1005</th>\n",
       "      <td>2014-10-02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19.4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1034</th>\n",
       "      <td>2014-10-31</td>\n",
       "      <td>17.0</td>\n",
       "      <td>12.8</td>\n",
       "      <td>8.3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1122</th>\n",
       "      <td>2015-01-27</td>\n",
       "      <td>0.8</td>\n",
       "      <td>11.1</td>\n",
       "      <td>8.3</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1229</th>\n",
       "      <td>2015-05-14</td>\n",
       "      <td>0.3</td>\n",
       "      <td>17.8</td>\n",
       "      <td>9.4</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1309</th>\n",
       "      <td>2015-08-02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.6</td>\n",
       "      <td>16.1</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1360</th>\n",
       "      <td>2015-09-22</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.9</td>\n",
       "      <td>7.8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1386</th>\n",
       "      <td>2015-10-18</td>\n",
       "      <td>3.8</td>\n",
       "      <td>15.0</td>\n",
       "      <td>12.8</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  precipitation  temp_max  temp_min  wind  weather\n",
       "7     2012-01-08            0.0      10.0       2.8   2.0      sun\n",
       "107   2012-04-17            1.8      10.0       4.4   2.0     rain\n",
       "175   2012-06-24            0.0      19.4       9.4   2.0  drizzle\n",
       "190   2012-07-09            1.5      25.0      12.8   2.0     rain\n",
       "210   2012-07-29            0.0      22.8      15.0   2.0      sun\n",
       "245   2012-09-02            0.0      21.1      10.0   2.0      sun\n",
       "291   2012-10-18           20.8      17.8       6.7   2.0     rain\n",
       "313   2012-11-09            0.0       8.9       1.1   2.0     rain\n",
       "342   2012-12-08            0.0       6.7       3.3   2.0      sun\n",
       "346   2012-12-12            8.1       6.7       4.4   2.0     rain\n",
       "365   2012-12-31            0.0       3.3      -1.1   2.0  drizzle\n",
       "377   2013-01-12            0.0       2.8      -3.9   2.0      sun\n",
       "398   2013-02-02            0.0       6.1       2.8   2.0  drizzle\n",
       "406   2013-02-10            0.0       8.9       1.7   2.0  drizzle\n",
       "491   2013-05-06            0.0      30.6      12.2   2.0      sun\n",
       "564   2013-07-18            0.0      26.1      13.9   2.0      sun\n",
       "566   2013-07-20            0.0      25.0      13.3   2.0      sun\n",
       "579   2013-08-02            2.0      17.2      15.0   2.0     rain\n",
       "591   2013-08-14            0.8      27.2      15.0   2.0     rain\n",
       "615   2013-09-07            0.0      23.3      17.2   2.0      sun\n",
       "621   2013-09-13            0.0      18.9      15.6   2.0      sun\n",
       "965   2014-08-23            0.0      27.8      13.9   2.0      sun\n",
       "967   2014-08-25            0.0      28.9      14.4   2.0      sun\n",
       "1001  2014-09-28            0.0      18.9      12.2   2.0      fog\n",
       "1005  2014-10-02            0.0      19.4      10.0   2.0      sun\n",
       "1034  2014-10-31           17.0      12.8       8.3   2.0     rain\n",
       "1122  2015-01-27            0.8      11.1       8.3   2.0     rain\n",
       "1229  2015-05-14            0.3      17.8       9.4   2.0     rain\n",
       "1309  2015-08-02            0.0      30.6      16.1   2.0      sun\n",
       "1360  2015-09-22            0.0      18.9       7.8   2.0      sun\n",
       "1386  2015-10-18            3.8      15.0      12.8   2.0     rain"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a[a.wind==2]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "690288ed",
   "metadata": {
    "papermill": {
     "duration": 0.023612,
     "end_time": "2023-11-23T09:56:36.997339",
     "exception": false,
     "start_time": "2023-11-23T09:56:36.973727",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 4) Find out all the null values in data.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "fad10025",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:37.047364Z",
     "iopub.status.busy": "2023-11-23T09:56:37.046948Z",
     "iopub.status.idle": "2023-11-23T09:56:37.056874Z",
     "shell.execute_reply": "2023-11-23T09:56:37.055665Z"
    },
    "papermill": {
     "duration": 0.037782,
     "end_time": "2023-11-23T09:56:37.059456",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.021674",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date             0\n",
       "precipitation    0\n",
       "temp_max         0\n",
       "temp_min         0\n",
       "wind             0\n",
       "weather          0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "85d6d3b6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:37.111220Z",
     "iopub.status.busy": "2023-11-23T09:56:37.110770Z",
     "iopub.status.idle": "2023-11-23T09:56:37.120523Z",
     "shell.execute_reply": "2023-11-23T09:56:37.119280Z"
    },
    "papermill": {
     "duration": 0.038784,
     "end_time": "2023-11-23T09:56:37.123243",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.084459",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "date             1461\n",
       "precipitation    1461\n",
       "temp_max         1461\n",
       "temp_min         1461\n",
       "wind             1461\n",
       "weather          1461\n",
       "dtype: int64"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.notnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "99ddd5ab",
   "metadata": {
    "papermill": {
     "duration": 0.024458,
     "end_time": "2023-11-23T09:56:37.172124",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.147666",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 5) Rename the column name weather to weather condition**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "69d85d06",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:37.225746Z",
     "iopub.status.busy": "2023-11-23T09:56:37.225025Z",
     "iopub.status.idle": "2023-11-23T09:56:37.248817Z",
     "shell.execute_reply": "2023-11-23T09:56:37.247559Z"
    },
    "papermill": {
     "duration": 0.054525,
     "end_time": "2023-11-23T09:56:37.251477",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.196952",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather_condition</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012-01-01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.8</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.7</td>\n",
       "      <td>drizzle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-01-02</td>\n",
       "      <td>10.9</td>\n",
       "      <td>10.6</td>\n",
       "      <td>2.8</td>\n",
       "      <td>4.5</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-01-03</td>\n",
       "      <td>0.8</td>\n",
       "      <td>11.7</td>\n",
       "      <td>7.2</td>\n",
       "      <td>2.3</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-01-04</td>\n",
       "      <td>20.3</td>\n",
       "      <td>12.2</td>\n",
       "      <td>5.6</td>\n",
       "      <td>4.7</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012-01-05</td>\n",
       "      <td>1.3</td>\n",
       "      <td>8.9</td>\n",
       "      <td>2.8</td>\n",
       "      <td>6.1</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1456</th>\n",
       "      <td>2015-12-27</td>\n",
       "      <td>8.6</td>\n",
       "      <td>4.4</td>\n",
       "      <td>1.7</td>\n",
       "      <td>2.9</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1457</th>\n",
       "      <td>2015-12-28</td>\n",
       "      <td>1.5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>1.3</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1458</th>\n",
       "      <td>2015-12-29</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.2</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.6</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1459</th>\n",
       "      <td>2015-12-30</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.6</td>\n",
       "      <td>-1.0</td>\n",
       "      <td>3.4</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1460</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.6</td>\n",
       "      <td>-2.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1461 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  precipitation  temp_max  temp_min  wind weather_condition\n",
       "0     2012-01-01            0.0      12.8       5.0   4.7           drizzle\n",
       "1     2012-01-02           10.9      10.6       2.8   4.5              rain\n",
       "2     2012-01-03            0.8      11.7       7.2   2.3              rain\n",
       "3     2012-01-04           20.3      12.2       5.6   4.7              rain\n",
       "4     2012-01-05            1.3       8.9       2.8   6.1              rain\n",
       "...          ...            ...       ...       ...   ...               ...\n",
       "1456  2015-12-27            8.6       4.4       1.7   2.9              rain\n",
       "1457  2015-12-28            1.5       5.0       1.7   1.3              rain\n",
       "1458  2015-12-29            0.0       7.2       0.6   2.6               fog\n",
       "1459  2015-12-30            0.0       5.6      -1.0   3.4               sun\n",
       "1460  2015-12-31            0.0       5.6      -2.1   3.5               sun\n",
       "\n",
       "[1461 rows x 6 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.rename(columns= {'weather':'weather_condition'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "27994cb5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:37.303058Z",
     "iopub.status.busy": "2023-11-23T09:56:37.302634Z",
     "iopub.status.idle": "2023-11-23T09:56:37.309528Z",
     "shell.execute_reply": "2023-11-23T09:56:37.308216Z"
    },
    "papermill": {
     "duration": 0.035694,
     "end_time": "2023-11-23T09:56:37.312147",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.276453",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "a.rename(columns={\"weather\" :\"weather condition\"},inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "8e1e0eea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:37.364002Z",
     "iopub.status.busy": "2023-11-23T09:56:37.363542Z",
     "iopub.status.idle": "2023-11-23T09:56:37.380084Z",
     "shell.execute_reply": "2023-11-23T09:56:37.378810Z"
    },
    "papermill": {
     "duration": 0.045445,
     "end_time": "2023-11-23T09:56:37.382628",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.337183",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather condition</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012-01-01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>12.8</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4.7</td>\n",
       "      <td>drizzle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-01-02</td>\n",
       "      <td>10.9</td>\n",
       "      <td>10.6</td>\n",
       "      <td>2.8</td>\n",
       "      <td>4.5</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-01-03</td>\n",
       "      <td>0.8</td>\n",
       "      <td>11.7</td>\n",
       "      <td>7.2</td>\n",
       "      <td>2.3</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-01-04</td>\n",
       "      <td>20.3</td>\n",
       "      <td>12.2</td>\n",
       "      <td>5.6</td>\n",
       "      <td>4.7</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012-01-05</td>\n",
       "      <td>1.3</td>\n",
       "      <td>8.9</td>\n",
       "      <td>2.8</td>\n",
       "      <td>6.1</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         date  precipitation  temp_max  temp_min  wind weather condition\n",
       "0  2012-01-01            0.0      12.8       5.0   4.7           drizzle\n",
       "1  2012-01-02           10.9      10.6       2.8   4.5              rain\n",
       "2  2012-01-03            0.8      11.7       7.2   2.3              rain\n",
       "3  2012-01-04           20.3      12.2       5.6   4.7              rain\n",
       "4  2012-01-05            1.3       8.9       2.8   6.1              rain"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a9e3fd44",
   "metadata": {
    "papermill": {
     "duration": 0.024768,
     "end_time": "2023-11-23T09:56:37.432951",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.408183",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 6) What is the  mean of 'precipitation'?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "ce573905",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:37.485941Z",
     "iopub.status.busy": "2023-11-23T09:56:37.485492Z",
     "iopub.status.idle": "2023-11-23T09:56:37.493094Z",
     "shell.execute_reply": "2023-11-23T09:56:37.491938Z"
    },
    "papermill": {
     "duration": 0.036881,
     "end_time": "2023-11-23T09:56:37.495737",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.458856",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3.02943189596167"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a['precipitation'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f3cc92e",
   "metadata": {
    "papermill": {
     "duration": 0.024993,
     "end_time": "2023-11-23T09:56:37.545985",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.520992",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "OR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "12682eeb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:37.599236Z",
     "iopub.status.busy": "2023-11-23T09:56:37.598747Z",
     "iopub.status.idle": "2023-11-23T09:56:37.607237Z",
     "shell.execute_reply": "2023-11-23T09:56:37.606319Z"
    },
    "papermill": {
     "duration": 0.037893,
     "end_time": "2023-11-23T09:56:37.609640",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.571747",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "3.02943189596167"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.precipitation.mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8e693a49",
   "metadata": {
    "papermill": {
     "duration": 0.025785,
     "end_time": "2023-11-23T09:56:37.661215",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.635430",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 7) What is the standard deviation of 'wind' in this data?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "7d19b9f9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:37.714861Z",
     "iopub.status.busy": "2023-11-23T09:56:37.714407Z",
     "iopub.status.idle": "2023-11-23T09:56:37.723319Z",
     "shell.execute_reply": "2023-11-23T09:56:37.722001Z"
    },
    "papermill": {
     "duration": 0.038611,
     "end_time": "2023-11-23T09:56:37.725753",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.687142",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.4378250588746193"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.wind.std()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fdc1d3fe",
   "metadata": {
    "papermill": {
     "duration": 0.024899,
     "end_time": "2023-11-23T09:56:37.775944",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.751045",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 8) What is the variance of 'wind' in this data?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "c10a70c3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:37.830490Z",
     "iopub.status.busy": "2023-11-23T09:56:37.830066Z",
     "iopub.status.idle": "2023-11-23T09:56:37.839468Z",
     "shell.execute_reply": "2023-11-23T09:56:37.838053Z"
    },
    "papermill": {
     "duration": 0.040289,
     "end_time": "2023-11-23T09:56:37.842318",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.802029",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.0673408999278027"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.wind.var()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "733897b9",
   "metadata": {
    "papermill": {
     "duration": 0.026308,
     "end_time": "2023-11-23T09:56:37.895546",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.869238",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 9) Find all the instance where the weather is 'fog'?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "3b85c4c3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:37.951860Z",
     "iopub.status.busy": "2023-11-23T09:56:37.951384Z",
     "iopub.status.idle": "2023-11-23T09:56:37.961886Z",
     "shell.execute_reply": "2023-11-23T09:56:37.960552Z"
    },
    "papermill": {
     "duration": 0.042123,
     "end_time": "2023-11-23T09:56:37.964560",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.922437",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "weather condition\n",
       "rain       641\n",
       "sun        640\n",
       "fog        101\n",
       "drizzle     53\n",
       "snow        26\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#value_counts\n",
    "a['weather condition'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "0769830f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:38.019702Z",
     "iopub.status.busy": "2023-11-23T09:56:38.019256Z",
     "iopub.status.idle": "2023-11-23T09:56:38.042878Z",
     "shell.execute_reply": "2023-11-23T09:56:38.041671Z"
    },
    "papermill": {
     "duration": 0.05439,
     "end_time": "2023-11-23T09:56:38.045447",
     "exception": false,
     "start_time": "2023-11-23T09:56:37.991057",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather condition</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>192</th>\n",
       "      <td>2012-07-11</td>\n",
       "      <td>0.0</td>\n",
       "      <td>27.8</td>\n",
       "      <td>13.3</td>\n",
       "      <td>2.9</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>260</th>\n",
       "      <td>2012-09-17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>27.8</td>\n",
       "      <td>11.7</td>\n",
       "      <td>2.2</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266</th>\n",
       "      <td>2012-09-23</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19.4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>267</th>\n",
       "      <td>2012-09-24</td>\n",
       "      <td>0.0</td>\n",
       "      <td>21.1</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.8</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>330</th>\n",
       "      <td>2012-11-26</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.4</td>\n",
       "      <td>1.7</td>\n",
       "      <td>3.8</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1419</th>\n",
       "      <td>2015-11-20</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0.6</td>\n",
       "      <td>4.0</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1421</th>\n",
       "      <td>2015-11-22</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>3.1</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1428</th>\n",
       "      <td>2015-11-29</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>-2.1</td>\n",
       "      <td>0.9</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1448</th>\n",
       "      <td>2015-12-19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.3</td>\n",
       "      <td>2.8</td>\n",
       "      <td>4.1</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1458</th>\n",
       "      <td>2015-12-29</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.2</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.6</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>101 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  precipitation  temp_max  temp_min  wind weather condition\n",
       "192   2012-07-11            0.0      27.8      13.3   2.9               fog\n",
       "260   2012-09-17            0.0      27.8      11.7   2.2               fog\n",
       "266   2012-09-23            0.0      19.4      10.0   1.4               fog\n",
       "267   2012-09-24            0.0      21.1      10.0   1.8               fog\n",
       "330   2012-11-26            0.0       9.4       1.7   3.8               fog\n",
       "...          ...            ...       ...       ...   ...               ...\n",
       "1419  2015-11-20            0.0       8.3       0.6   4.0               fog\n",
       "1421  2015-11-22            0.0      10.0       1.7   3.1               fog\n",
       "1428  2015-11-29            0.0       1.7      -2.1   0.9               fog\n",
       "1448  2015-12-19            0.0       8.3       2.8   4.1               fog\n",
       "1458  2015-12-29            0.0       7.2       0.6   2.6               fog\n",
       "\n",
       "[101 rows x 6 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Filtering\n",
    "a[a['weather condition']== 'fog']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "f9ff0233",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:38.101332Z",
     "iopub.status.busy": "2023-11-23T09:56:38.100901Z",
     "iopub.status.idle": "2023-11-23T09:56:38.123950Z",
     "shell.execute_reply": "2023-11-23T09:56:38.123045Z"
    },
    "papermill": {
     "duration": 0.054212,
     "end_time": "2023-11-23T09:56:38.126352",
     "exception": false,
     "start_time": "2023-11-23T09:56:38.072140",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather condition</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>192</th>\n",
       "      <td>2012-07-11</td>\n",
       "      <td>0.0</td>\n",
       "      <td>27.8</td>\n",
       "      <td>13.3</td>\n",
       "      <td>2.9</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>260</th>\n",
       "      <td>2012-09-17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>27.8</td>\n",
       "      <td>11.7</td>\n",
       "      <td>2.2</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266</th>\n",
       "      <td>2012-09-23</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19.4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>267</th>\n",
       "      <td>2012-09-24</td>\n",
       "      <td>0.0</td>\n",
       "      <td>21.1</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.8</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>330</th>\n",
       "      <td>2012-11-26</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.4</td>\n",
       "      <td>1.7</td>\n",
       "      <td>3.8</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1419</th>\n",
       "      <td>2015-11-20</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0.6</td>\n",
       "      <td>4.0</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1421</th>\n",
       "      <td>2015-11-22</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>3.1</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1428</th>\n",
       "      <td>2015-11-29</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>-2.1</td>\n",
       "      <td>0.9</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1448</th>\n",
       "      <td>2015-12-19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.3</td>\n",
       "      <td>2.8</td>\n",
       "      <td>4.1</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1458</th>\n",
       "      <td>2015-12-29</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.2</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.6</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>101 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  precipitation  temp_max  temp_min  wind weather condition\n",
       "192   2012-07-11            0.0      27.8      13.3   2.9               fog\n",
       "260   2012-09-17            0.0      27.8      11.7   2.2               fog\n",
       "266   2012-09-23            0.0      19.4      10.0   1.4               fog\n",
       "267   2012-09-24            0.0      21.1      10.0   1.8               fog\n",
       "330   2012-11-26            0.0       9.4       1.7   3.8               fog\n",
       "...          ...            ...       ...       ...   ...               ...\n",
       "1419  2015-11-20            0.0       8.3       0.6   4.0               fog\n",
       "1421  2015-11-22            0.0      10.0       1.7   3.1               fog\n",
       "1428  2015-11-29            0.0       1.7      -2.1   0.9               fog\n",
       "1448  2015-12-19            0.0       8.3       2.8   4.1               fog\n",
       "1458  2015-12-29            0.0       7.2       0.6   2.6               fog\n",
       "\n",
       "[101 rows x 6 columns]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Groupby\n",
    "a.groupby('weather condition').get_group('fog')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "112e59fe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:38.183308Z",
     "iopub.status.busy": "2023-11-23T09:56:38.182935Z",
     "iopub.status.idle": "2023-11-23T09:56:38.207155Z",
     "shell.execute_reply": "2023-11-23T09:56:38.206041Z"
    },
    "papermill": {
     "duration": 0.056164,
     "end_time": "2023-11-23T09:56:38.209793",
     "exception": false,
     "start_time": "2023-11-23T09:56:38.153629",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather condition</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>192</th>\n",
       "      <td>2012-07-11</td>\n",
       "      <td>0.0</td>\n",
       "      <td>27.8</td>\n",
       "      <td>13.3</td>\n",
       "      <td>2.9</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>260</th>\n",
       "      <td>2012-09-17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>27.8</td>\n",
       "      <td>11.7</td>\n",
       "      <td>2.2</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>266</th>\n",
       "      <td>2012-09-23</td>\n",
       "      <td>0.0</td>\n",
       "      <td>19.4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>267</th>\n",
       "      <td>2012-09-24</td>\n",
       "      <td>0.0</td>\n",
       "      <td>21.1</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.8</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>330</th>\n",
       "      <td>2012-11-26</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.4</td>\n",
       "      <td>1.7</td>\n",
       "      <td>3.8</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1419</th>\n",
       "      <td>2015-11-20</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0.6</td>\n",
       "      <td>4.0</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1421</th>\n",
       "      <td>2015-11-22</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>3.1</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1428</th>\n",
       "      <td>2015-11-29</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>-2.1</td>\n",
       "      <td>0.9</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1448</th>\n",
       "      <td>2015-12-19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.3</td>\n",
       "      <td>2.8</td>\n",
       "      <td>4.1</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1458</th>\n",
       "      <td>2015-12-29</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.2</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.6</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>101 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  precipitation  temp_max  temp_min  wind weather condition\n",
       "192   2012-07-11            0.0      27.8      13.3   2.9               fog\n",
       "260   2012-09-17            0.0      27.8      11.7   2.2               fog\n",
       "266   2012-09-23            0.0      19.4      10.0   1.4               fog\n",
       "267   2012-09-24            0.0      21.1      10.0   1.8               fog\n",
       "330   2012-11-26            0.0       9.4       1.7   3.8               fog\n",
       "...          ...            ...       ...       ...   ...               ...\n",
       "1419  2015-11-20            0.0       8.3       0.6   4.0               fog\n",
       "1421  2015-11-22            0.0      10.0       1.7   3.1               fog\n",
       "1428  2015-11-29            0.0       1.7      -2.1   0.9               fog\n",
       "1448  2015-12-19            0.0       8.3       2.8   4.1               fog\n",
       "1458  2015-12-29            0.0       7.2       0.6   2.6               fog\n",
       "\n",
       "[101 rows x 6 columns]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#str.contains\n",
    "a[a['weather condition'].str.contains('fog')]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e3f9425a",
   "metadata": {
    "papermill": {
     "duration": 0.027662,
     "end_time": "2023-11-23T09:56:38.268159",
     "exception": false,
     "start_time": "2023-11-23T09:56:38.240497",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 10) Find all the instance where temp_max greater than 8 and temp_min is 10?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "8f409bad",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:38.330997Z",
     "iopub.status.busy": "2023-11-23T09:56:38.330551Z",
     "iopub.status.idle": "2023-11-23T09:56:38.354860Z",
     "shell.execute_reply": "2023-11-23T09:56:38.353964Z"
    },
    "papermill": {
     "duration": 0.059163,
     "end_time": "2023-11-23T09:56:38.357195",
     "exception": false,
     "start_time": "2023-11-23T09:56:38.298032",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather condition</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>2012-04-24</td>\n",
       "      <td>4.3</td>\n",
       "      <td>13.9</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.8</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>141</th>\n",
       "      <td>2012-05-21</td>\n",
       "      <td>14.0</td>\n",
       "      <td>16.7</td>\n",
       "      <td>10.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>2012-05-28</td>\n",
       "      <td>0.0</td>\n",
       "      <td>16.7</td>\n",
       "      <td>10.0</td>\n",
       "      <td>3.4</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>161</th>\n",
       "      <td>2012-06-10</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.9</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.9</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>162</th>\n",
       "      <td>2012-06-11</td>\n",
       "      <td>0.0</td>\n",
       "      <td>23.3</td>\n",
       "      <td>10.0</td>\n",
       "      <td>1.8</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1372</th>\n",
       "      <td>2015-10-04</td>\n",
       "      <td>0.0</td>\n",
       "      <td>22.8</td>\n",
       "      <td>10.0</td>\n",
       "      <td>3.7</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1374</th>\n",
       "      <td>2015-10-06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.3</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.6</td>\n",
       "      <td>drizzle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1382</th>\n",
       "      <td>2015-10-14</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1394</th>\n",
       "      <td>2015-10-26</td>\n",
       "      <td>6.9</td>\n",
       "      <td>12.2</td>\n",
       "      <td>10.0</td>\n",
       "      <td>4.6</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1437</th>\n",
       "      <td>2015-12-08</td>\n",
       "      <td>54.1</td>\n",
       "      <td>15.6</td>\n",
       "      <td>10.0</td>\n",
       "      <td>6.2</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>64 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  precipitation  temp_max  temp_min  wind weather condition\n",
       "114   2012-04-24            4.3      13.9      10.0   2.8              rain\n",
       "141   2012-05-21           14.0      16.7      10.0   4.0              rain\n",
       "148   2012-05-28            0.0      16.7      10.0   3.4              rain\n",
       "161   2012-06-10            0.0      18.9      10.0   2.9               sun\n",
       "162   2012-06-11            0.0      23.3      10.0   1.8              rain\n",
       "...          ...            ...       ...       ...   ...               ...\n",
       "1372  2015-10-04            0.0      22.8      10.0   3.7               sun\n",
       "1374  2015-10-06            0.0      18.3      10.0   2.6           drizzle\n",
       "1382  2015-10-14            0.0      15.0      10.0   5.0               fog\n",
       "1394  2015-10-26            6.9      12.2      10.0   4.6              rain\n",
       "1437  2015-12-08           54.1      15.6      10.0   6.2              rain\n",
       "\n",
       "[64 rows x 6 columns]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a[(a['temp_max']>8) & (a['temp_min'] ==10)]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "56d83a96",
   "metadata": {
    "papermill": {
     "duration": 0.027871,
     "end_time": "2023-11-23T09:56:38.414001",
     "exception": false,
     "start_time": "2023-11-23T09:56:38.386130",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 11) What is the mean value of each column against each 'Weather Condition'?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "26248c60",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:38.472757Z",
     "iopub.status.busy": "2023-11-23T09:56:38.472319Z",
     "iopub.status.idle": "2023-11-23T09:56:38.492060Z",
     "shell.execute_reply": "2023-11-23T09:56:38.490787Z"
    },
    "papermill": {
     "duration": 0.052254,
     "end_time": "2023-11-23T09:56:38.494919",
     "exception": false,
     "start_time": "2023-11-23T09:56:38.442665",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>weather condition</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>drizzle</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>15.926415</td>\n",
       "      <td>7.111321</td>\n",
       "      <td>2.367925</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fog</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>16.757426</td>\n",
       "      <td>7.979208</td>\n",
       "      <td>2.481188</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rain</th>\n",
       "      <td>6.557878</td>\n",
       "      <td>13.454602</td>\n",
       "      <td>7.588768</td>\n",
       "      <td>3.669891</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snow</th>\n",
       "      <td>8.553846</td>\n",
       "      <td>5.573077</td>\n",
       "      <td>0.146154</td>\n",
       "      <td>4.411538</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sun</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>19.861875</td>\n",
       "      <td>9.343750</td>\n",
       "      <td>2.956406</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   precipitation   temp_max  temp_min      wind\n",
       "weather condition                                              \n",
       "drizzle                 0.000000  15.926415  7.111321  2.367925\n",
       "fog                     0.000000  16.757426  7.979208  2.481188\n",
       "rain                    6.557878  13.454602  7.588768  3.669891\n",
       "snow                    8.553846   5.573077  0.146154  4.411538\n",
       "sun                     0.000000  19.861875  9.343750  2.956406"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.groupby('weather condition').mean(numeric_only=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4cb40b9d",
   "metadata": {
    "papermill": {
     "duration": 0.027275,
     "end_time": "2023-11-23T09:56:38.550457",
     "exception": false,
     "start_time": "2023-11-23T09:56:38.523182",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 12) What is the Minimum & Maximum value of each column against each 'weather condition'?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "df2da974",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:38.607680Z",
     "iopub.status.busy": "2023-11-23T09:56:38.607268Z",
     "iopub.status.idle": "2023-11-23T09:56:38.628507Z",
     "shell.execute_reply": "2023-11-23T09:56:38.627646Z"
    },
    "papermill": {
     "duration": 0.053064,
     "end_time": "2023-11-23T09:56:38.631129",
     "exception": false,
     "start_time": "2023-11-23T09:56:38.578065",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>weather condition</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>drizzle</th>\n",
       "      <td>2012-01-01</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>-3.9</td>\n",
       "      <td>0.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fog</th>\n",
       "      <td>2012-07-11</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.7</td>\n",
       "      <td>-3.2</td>\n",
       "      <td>0.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rain</th>\n",
       "      <td>2012-01-02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.9</td>\n",
       "      <td>-3.8</td>\n",
       "      <td>0.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snow</th>\n",
       "      <td>2012-01-14</td>\n",
       "      <td>0.3</td>\n",
       "      <td>-1.1</td>\n",
       "      <td>-4.3</td>\n",
       "      <td>1.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sun</th>\n",
       "      <td>2012-01-08</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-1.6</td>\n",
       "      <td>-7.1</td>\n",
       "      <td>0.4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         date  precipitation  temp_max  temp_min  wind\n",
       "weather condition                                                     \n",
       "drizzle            2012-01-01            0.0       1.1      -3.9   0.6\n",
       "fog                2012-07-11            0.0       1.7      -3.2   0.8\n",
       "rain               2012-01-02            0.0       3.9      -3.8   0.5\n",
       "snow               2012-01-14            0.3      -1.1      -4.3   1.6\n",
       "sun                2012-01-08            0.0      -1.6      -7.1   0.4"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.groupby('weather condition').min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "228b48b4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:38.690137Z",
     "iopub.status.busy": "2023-11-23T09:56:38.689619Z",
     "iopub.status.idle": "2023-11-23T09:56:38.712555Z",
     "shell.execute_reply": "2023-11-23T09:56:38.711072Z"
    },
    "papermill": {
     "duration": 0.056614,
     "end_time": "2023-11-23T09:56:38.715802",
     "exception": false,
     "start_time": "2023-11-23T09:56:38.659188",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>weather condition</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>drizzle</th>\n",
       "      <td>2015-10-06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>31.7</td>\n",
       "      <td>16.1</td>\n",
       "      <td>4.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>fog</th>\n",
       "      <td>2015-12-29</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30.6</td>\n",
       "      <td>17.8</td>\n",
       "      <td>6.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rain</th>\n",
       "      <td>2015-12-28</td>\n",
       "      <td>55.9</td>\n",
       "      <td>35.6</td>\n",
       "      <td>18.3</td>\n",
       "      <td>9.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>snow</th>\n",
       "      <td>2014-11-29</td>\n",
       "      <td>23.9</td>\n",
       "      <td>11.1</td>\n",
       "      <td>5.6</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>sun</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>0.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>18.3</td>\n",
       "      <td>7.7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                         date  precipitation  temp_max  temp_min  wind\n",
       "weather condition                                                     \n",
       "drizzle            2015-10-06            0.0      31.7      16.1   4.7\n",
       "fog                2015-12-29            0.0      30.6      17.8   6.6\n",
       "rain               2015-12-28           55.9      35.6      18.3   9.5\n",
       "snow               2014-11-29           23.9      11.1       5.6   7.0\n",
       "sun                2015-12-31            0.0      35.0      18.3   7.7"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a.groupby('weather condition').max()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9dbf2ad4",
   "metadata": {
    "papermill": {
     "duration": 0.028286,
     "end_time": "2023-11-23T09:56:38.772964",
     "exception": false,
     "start_time": "2023-11-23T09:56:38.744678",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 13) Show all the record where weather condition is snow**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "40ae1895",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:38.834695Z",
     "iopub.status.busy": "2023-11-23T09:56:38.834285Z",
     "iopub.status.idle": "2023-11-23T09:56:38.862577Z",
     "shell.execute_reply": "2023-11-23T09:56:38.861331Z"
    },
    "papermill": {
     "duration": 0.063197,
     "end_time": "2023-11-23T09:56:38.865082",
     "exception": false,
     "start_time": "2023-11-23T09:56:38.801885",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather condition</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2012-01-14</td>\n",
       "      <td>4.1</td>\n",
       "      <td>4.4</td>\n",
       "      <td>0.6</td>\n",
       "      <td>5.3</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2012-01-15</td>\n",
       "      <td>5.3</td>\n",
       "      <td>1.1</td>\n",
       "      <td>-3.3</td>\n",
       "      <td>3.2</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2012-01-16</td>\n",
       "      <td>2.5</td>\n",
       "      <td>1.7</td>\n",
       "      <td>-2.8</td>\n",
       "      <td>5.0</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2012-01-17</td>\n",
       "      <td>8.1</td>\n",
       "      <td>3.3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.6</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2012-01-18</td>\n",
       "      <td>19.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-2.8</td>\n",
       "      <td>5.0</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2012-01-19</td>\n",
       "      <td>15.2</td>\n",
       "      <td>-1.1</td>\n",
       "      <td>-2.8</td>\n",
       "      <td>1.6</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2012-01-20</td>\n",
       "      <td>13.5</td>\n",
       "      <td>7.2</td>\n",
       "      <td>-1.1</td>\n",
       "      <td>2.3</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>2012-02-26</td>\n",
       "      <td>1.3</td>\n",
       "      <td>5.0</td>\n",
       "      <td>-1.1</td>\n",
       "      <td>3.4</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>2012-02-28</td>\n",
       "      <td>3.6</td>\n",
       "      <td>6.7</td>\n",
       "      <td>-0.6</td>\n",
       "      <td>4.2</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>2012-02-29</td>\n",
       "      <td>0.8</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>7.0</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>2012-03-06</td>\n",
       "      <td>0.5</td>\n",
       "      <td>6.7</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.7</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>2012-03-12</td>\n",
       "      <td>19.3</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0.6</td>\n",
       "      <td>6.2</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>2012-03-13</td>\n",
       "      <td>9.4</td>\n",
       "      <td>5.6</td>\n",
       "      <td>0.6</td>\n",
       "      <td>5.3</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>2012-03-15</td>\n",
       "      <td>23.9</td>\n",
       "      <td>11.1</td>\n",
       "      <td>5.6</td>\n",
       "      <td>5.8</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>2012-03-17</td>\n",
       "      <td>9.4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.6</td>\n",
       "      <td>3.8</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>2012-04-05</td>\n",
       "      <td>4.6</td>\n",
       "      <td>9.4</td>\n",
       "      <td>2.8</td>\n",
       "      <td>1.8</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>349</th>\n",
       "      <td>2012-12-15</td>\n",
       "      <td>5.3</td>\n",
       "      <td>4.4</td>\n",
       "      <td>0.6</td>\n",
       "      <td>5.1</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>350</th>\n",
       "      <td>2012-12-16</td>\n",
       "      <td>22.6</td>\n",
       "      <td>6.7</td>\n",
       "      <td>3.3</td>\n",
       "      <td>5.5</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>352</th>\n",
       "      <td>2012-12-18</td>\n",
       "      <td>3.3</td>\n",
       "      <td>3.9</td>\n",
       "      <td>0.6</td>\n",
       "      <td>5.3</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>353</th>\n",
       "      <td>2012-12-19</td>\n",
       "      <td>13.7</td>\n",
       "      <td>8.3</td>\n",
       "      <td>1.7</td>\n",
       "      <td>5.8</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>359</th>\n",
       "      <td>2012-12-25</td>\n",
       "      <td>13.5</td>\n",
       "      <td>5.6</td>\n",
       "      <td>2.8</td>\n",
       "      <td>4.2</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>375</th>\n",
       "      <td>2013-01-10</td>\n",
       "      <td>0.3</td>\n",
       "      <td>3.3</td>\n",
       "      <td>-0.6</td>\n",
       "      <td>2.1</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>445</th>\n",
       "      <td>2013-03-21</td>\n",
       "      <td>8.1</td>\n",
       "      <td>10.0</td>\n",
       "      <td>2.2</td>\n",
       "      <td>4.9</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>719</th>\n",
       "      <td>2013-12-20</td>\n",
       "      <td>5.6</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0.6</td>\n",
       "      <td>3.7</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>769</th>\n",
       "      <td>2014-02-08</td>\n",
       "      <td>5.1</td>\n",
       "      <td>5.6</td>\n",
       "      <td>-0.5</td>\n",
       "      <td>4.6</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1063</th>\n",
       "      <td>2014-11-29</td>\n",
       "      <td>3.6</td>\n",
       "      <td>4.4</td>\n",
       "      <td>-4.3</td>\n",
       "      <td>5.3</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  precipitation  temp_max  temp_min  wind weather condition\n",
       "13    2012-01-14            4.1       4.4       0.6   5.3              snow\n",
       "14    2012-01-15            5.3       1.1      -3.3   3.2              snow\n",
       "15    2012-01-16            2.5       1.7      -2.8   5.0              snow\n",
       "16    2012-01-17            8.1       3.3       0.0   5.6              snow\n",
       "17    2012-01-18           19.8       0.0      -2.8   5.0              snow\n",
       "18    2012-01-19           15.2      -1.1      -2.8   1.6              snow\n",
       "19    2012-01-20           13.5       7.2      -1.1   2.3              snow\n",
       "56    2012-02-26            1.3       5.0      -1.1   3.4              snow\n",
       "58    2012-02-28            3.6       6.7      -0.6   4.2              snow\n",
       "59    2012-02-29            0.8       5.0       1.1   7.0              snow\n",
       "65    2012-03-06            0.5       6.7       0.0   2.7              snow\n",
       "71    2012-03-12           19.3       8.3       0.6   6.2              snow\n",
       "72    2012-03-13            9.4       5.6       0.6   5.3              snow\n",
       "74    2012-03-15           23.9      11.1       5.6   5.8              snow\n",
       "76    2012-03-17            9.4      10.0       0.6   3.8              snow\n",
       "95    2012-04-05            4.6       9.4       2.8   1.8              snow\n",
       "349   2012-12-15            5.3       4.4       0.6   5.1              snow\n",
       "350   2012-12-16           22.6       6.7       3.3   5.5              snow\n",
       "352   2012-12-18            3.3       3.9       0.6   5.3              snow\n",
       "353   2012-12-19           13.7       8.3       1.7   5.8              snow\n",
       "359   2012-12-25           13.5       5.6       2.8   4.2              snow\n",
       "375   2013-01-10            0.3       3.3      -0.6   2.1              snow\n",
       "445   2013-03-21            8.1      10.0       2.2   4.9              snow\n",
       "719   2013-12-20            5.6       8.3       0.6   3.7              snow\n",
       "769   2014-02-08            5.1       5.6      -0.5   4.6              snow\n",
       "1063  2014-11-29            3.6       4.4      -4.3   5.3              snow"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a[a['weather condition']=='snow']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "756a2220",
   "metadata": {
    "papermill": {
     "duration": 0.029163,
     "end_time": "2023-11-23T09:56:38.924301",
     "exception": false,
     "start_time": "2023-11-23T09:56:38.895138",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 14)Find all instances when weather is fog or  precipitation is  above 10?**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "2ef1503e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:38.985622Z",
     "iopub.status.busy": "2023-11-23T09:56:38.985175Z",
     "iopub.status.idle": "2023-11-23T09:56:39.007799Z",
     "shell.execute_reply": "2023-11-23T09:56:39.006839Z"
    },
    "papermill": {
     "duration": 0.056416,
     "end_time": "2023-11-23T09:56:39.010748",
     "exception": false,
     "start_time": "2023-11-23T09:56:38.954332",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather condition</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-01-02</td>\n",
       "      <td>10.9</td>\n",
       "      <td>10.6</td>\n",
       "      <td>2.8</td>\n",
       "      <td>4.5</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-01-04</td>\n",
       "      <td>20.3</td>\n",
       "      <td>12.2</td>\n",
       "      <td>5.6</td>\n",
       "      <td>4.7</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2012-01-18</td>\n",
       "      <td>19.8</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-2.8</td>\n",
       "      <td>5.0</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2012-01-19</td>\n",
       "      <td>15.2</td>\n",
       "      <td>-1.1</td>\n",
       "      <td>-2.8</td>\n",
       "      <td>1.6</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2012-01-20</td>\n",
       "      <td>13.5</td>\n",
       "      <td>7.2</td>\n",
       "      <td>-1.1</td>\n",
       "      <td>2.3</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1446</th>\n",
       "      <td>2015-12-17</td>\n",
       "      <td>21.8</td>\n",
       "      <td>6.7</td>\n",
       "      <td>3.9</td>\n",
       "      <td>6.0</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1447</th>\n",
       "      <td>2015-12-18</td>\n",
       "      <td>18.5</td>\n",
       "      <td>8.9</td>\n",
       "      <td>4.4</td>\n",
       "      <td>5.1</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1448</th>\n",
       "      <td>2015-12-19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.3</td>\n",
       "      <td>2.8</td>\n",
       "      <td>4.1</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1450</th>\n",
       "      <td>2015-12-21</td>\n",
       "      <td>27.4</td>\n",
       "      <td>5.6</td>\n",
       "      <td>2.8</td>\n",
       "      <td>4.3</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1458</th>\n",
       "      <td>2015-12-29</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.2</td>\n",
       "      <td>0.6</td>\n",
       "      <td>2.6</td>\n",
       "      <td>fog</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>245 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  precipitation  temp_max  temp_min  wind weather condition\n",
       "1     2012-01-02           10.9      10.6       2.8   4.5              rain\n",
       "3     2012-01-04           20.3      12.2       5.6   4.7              rain\n",
       "17    2012-01-18           19.8       0.0      -2.8   5.0              snow\n",
       "18    2012-01-19           15.2      -1.1      -2.8   1.6              snow\n",
       "19    2012-01-20           13.5       7.2      -1.1   2.3              snow\n",
       "...          ...            ...       ...       ...   ...               ...\n",
       "1446  2015-12-17           21.8       6.7       3.9   6.0              rain\n",
       "1447  2015-12-18           18.5       8.9       4.4   5.1              rain\n",
       "1448  2015-12-19            0.0       8.3       2.8   4.1               fog\n",
       "1450  2015-12-21           27.4       5.6       2.8   4.3              rain\n",
       "1458  2015-12-29            0.0       7.2       0.6   2.6               fog\n",
       "\n",
       "[245 rows x 6 columns]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a[((a['weather condition']==\"fog\") |  (a['precipitation']>10))]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6304e854",
   "metadata": {
    "papermill": {
     "duration": 0.029185,
     "end_time": "2023-11-23T09:56:39.069630",
     "exception": false,
     "start_time": "2023-11-23T09:56:39.040445",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "0e1439ce",
   "metadata": {
    "papermill": {
     "duration": 0.029121,
     "end_time": "2023-11-23T09:56:39.128099",
     "exception": false,
     "start_time": "2023-11-23T09:56:39.098978",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**Question 15) Find all the instance a)Weather is snow and wind is greater than 6  or\n",
    "                                   b)temp_min is above 5 ****"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "eef311c0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:39.194268Z",
     "iopub.status.busy": "2023-11-23T09:56:39.193255Z",
     "iopub.status.idle": "2023-11-23T09:56:39.228503Z",
     "shell.execute_reply": "2023-11-23T09:56:39.227049Z"
    },
    "papermill": {
     "duration": 0.074918,
     "end_time": "2023-11-23T09:56:39.232647",
     "exception": false,
     "start_time": "2023-11-23T09:56:39.157729",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>precipitation</th>\n",
       "      <th>temp_max</th>\n",
       "      <th>temp_min</th>\n",
       "      <th>wind</th>\n",
       "      <th>weather condition</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>2012-02-29</td>\n",
       "      <td>0.8</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.1</td>\n",
       "      <td>7.0</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>2012-03-12</td>\n",
       "      <td>19.3</td>\n",
       "      <td>8.3</td>\n",
       "      <td>0.6</td>\n",
       "      <td>6.2</td>\n",
       "      <td>snow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216</th>\n",
       "      <td>2012-08-04</td>\n",
       "      <td>0.0</td>\n",
       "      <td>33.9</td>\n",
       "      <td>16.7</td>\n",
       "      <td>3.7</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>217</th>\n",
       "      <td>2012-08-05</td>\n",
       "      <td>0.0</td>\n",
       "      <td>33.9</td>\n",
       "      <td>17.8</td>\n",
       "      <td>1.9</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>218</th>\n",
       "      <td>2012-08-06</td>\n",
       "      <td>0.0</td>\n",
       "      <td>28.3</td>\n",
       "      <td>15.6</td>\n",
       "      <td>2.5</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1319</th>\n",
       "      <td>2015-08-12</td>\n",
       "      <td>7.6</td>\n",
       "      <td>28.3</td>\n",
       "      <td>16.7</td>\n",
       "      <td>2.7</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1320</th>\n",
       "      <td>2015-08-13</td>\n",
       "      <td>0.0</td>\n",
       "      <td>28.3</td>\n",
       "      <td>15.6</td>\n",
       "      <td>2.2</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1326</th>\n",
       "      <td>2015-08-19</td>\n",
       "      <td>0.0</td>\n",
       "      <td>31.7</td>\n",
       "      <td>16.1</td>\n",
       "      <td>2.1</td>\n",
       "      <td>drizzle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>2015-08-28</td>\n",
       "      <td>0.5</td>\n",
       "      <td>23.3</td>\n",
       "      <td>15.6</td>\n",
       "      <td>2.6</td>\n",
       "      <td>rain</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1338</th>\n",
       "      <td>2015-08-31</td>\n",
       "      <td>0.0</td>\n",
       "      <td>18.9</td>\n",
       "      <td>16.1</td>\n",
       "      <td>5.8</td>\n",
       "      <td>sun</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>96 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            date  precipitation  temp_max  temp_min  wind weather condition\n",
       "59    2012-02-29            0.8       5.0       1.1   7.0              snow\n",
       "71    2012-03-12           19.3       8.3       0.6   6.2              snow\n",
       "216   2012-08-04            0.0      33.9      16.7   3.7               sun\n",
       "217   2012-08-05            0.0      33.9      17.8   1.9               sun\n",
       "218   2012-08-06            0.0      28.3      15.6   2.5              rain\n",
       "...          ...            ...       ...       ...   ...               ...\n",
       "1319  2015-08-12            7.6      28.3      16.7   2.7              rain\n",
       "1320  2015-08-13            0.0      28.3      15.6   2.2               sun\n",
       "1326  2015-08-19            0.0      31.7      16.1   2.1           drizzle\n",
       "1335  2015-08-28            0.5      23.3      15.6   2.6              rain\n",
       "1338  2015-08-31            0.0      18.9      16.1   5.8               sun\n",
       "\n",
       "[96 rows x 6 columns]"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a[(a['weather condition']=='snow') & (a['wind']>6) | (a['temp_min']>15)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "26abf57f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:39.304268Z",
     "iopub.status.busy": "2023-11-23T09:56:39.303519Z",
     "iopub.status.idle": "2023-11-23T09:56:39.307753Z",
     "shell.execute_reply": "2023-11-23T09:56:39.306876Z"
    },
    "papermill": {
     "duration": 0.039606,
     "end_time": "2023-11-23T09:56:39.310342",
     "exception": false,
     "start_time": "2023-11-23T09:56:39.270736",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Data Visualization   using Matplotlib "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "8b8fcff3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:39.393110Z",
     "iopub.status.busy": "2023-11-23T09:56:39.392476Z",
     "iopub.status.idle": "2023-11-23T09:56:39.400347Z",
     "shell.execute_reply": "2023-11-23T09:56:39.398853Z"
    },
    "papermill": {
     "duration": 0.057957,
     "end_time": "2023-11-23T09:56:39.404657",
     "exception": false,
     "start_time": "2023-11-23T09:56:39.346700",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "0ad03aa2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:39.491519Z",
     "iopub.status.busy": "2023-11-23T09:56:39.490030Z",
     "iopub.status.idle": "2023-11-23T09:56:42.477088Z",
     "shell.execute_reply": "2023-11-23T09:56:42.475600Z"
    },
    "papermill": {
     "duration": 3.033478,
     "end_time": "2023-11-23T09:56:42.480008",
     "exception": false,
     "start_time": "2023-11-23T09:56:39.446530",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df=pd.DataFrame(a)\n",
    "df['date'] = pd.to_datetime(df['date'])\n",
    "plt.bar(df['date'], df['temp_max'], color='blue')\n",
    "plt.xlabel('Date')\n",
    "plt.ylabel('Max Temperature')\n",
    "plt.title('Max Temperature over Time')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "4fa5bb68",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:42.547653Z",
     "iopub.status.busy": "2023-11-23T09:56:42.547034Z",
     "iopub.status.idle": "2023-11-23T09:56:52.951607Z",
     "shell.execute_reply": "2023-11-23T09:56:52.950031Z"
    },
    "papermill": {
     "duration": 10.442226,
     "end_time": "2023-11-23T09:56:52.955595",
     "exception": false,
     "start_time": "2023-11-23T09:56:42.513369",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 3000x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x=a['date']\n",
    "y=a['precipitation']\n",
    "plt.figure(figsize=(30,10))\n",
    "plt.plot(x,y,'r')\n",
    "plt.title('Precipitation based on dates')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "62f1ad9c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:53.024228Z",
     "iopub.status.busy": "2023-11-23T09:56:53.023835Z",
     "iopub.status.idle": "2023-11-23T09:56:53.347027Z",
     "shell.execute_reply": "2023-11-23T09:56:53.345768Z"
    },
    "papermill": {
     "duration": 0.360861,
     "end_time": "2023-11-23T09:56:53.349913",
     "exception": false,
     "start_time": "2023-11-23T09:56:52.989052",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Frequency of Weather Conditions')"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df=pd.DataFrame(a)\n",
    "weather=df['weather condition'].value_counts()\n",
    "plt.bar(weather.index, weather.values, color='green')\n",
    "plt.xlabel('Weather Condition')\n",
    "plt.ylabel('Frequency')\n",
    "plt.title('Frequency of Weather Conditions')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "f1cb72ba",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:56:53.420436Z",
     "iopub.status.busy": "2023-11-23T09:56:53.420049Z",
     "iopub.status.idle": "2023-11-23T09:57:08.800749Z",
     "shell.execute_reply": "2023-11-23T09:57:08.799321Z"
    },
    "papermill": {
     "duration": 15.419991,
     "end_time": "2023-11-23T09:57:08.803831",
     "exception": false,
     "start_time": "2023-11-23T09:56:53.383840",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'DATE and WIND')"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAjsAAAHHCAYAAABZbpmkAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/OQEPoAAAACXBIWXMAAA9hAAAPYQGoP6dpAAAlXElEQVR4nO3de3RU1f3+8WdIJCEkBAgECASIaI0SBAEpDUhuWECitQpFCxVxqYAgItZiloIoCyNYkKIIQuVSSRBlSbW2IAgEIcpdKchFwYIR5eKFJAYM5PL7w1/myxACM8nMnDM779das1xz5lw+Z58BHvfe54yjvLy8XAAAAIaqY3UBAAAAvkTYAQAARiPsAAAAoxF2AACA0Qg7AADAaIQdAABgNMIOAAAwGmEHAAAYjbADAACMRtgBEPBycnLkcDiUk5NjdSkAbIiwA9jUokWL5HA4nK/Q0FDFxMSoT58+mjVrlgoLCy+5fbdu3eRwODRnzhznsopQ4M7rYjVc+Nq8ebNP28Cb3nzzTTkcDq1YsaLSZx07dpTD4dD69esrfda6dWslJiY637dt21bp6eku61S0x/Tp0yttX9GG27dvdy6bNGmSSzuGhYWpdevWuvXWW7Vw4UIVFxfX5FQBXCDY6gIAXNqzzz6ruLg4nTt3TseOHVNOTo7Gjh2rGTNm6N1339X1119faZsvvvhC27ZtU9u2bZWVlaWRI0dKkq699lq9/vrrLutmZGQoPDxcTz755GVruNBVV11Vw7Pzn549e0qSNm3apN///vfO5QUFBdqzZ4+Cg4OVm5urlJQU52d5eXnKy8vTXXfd5dYxXnjhBY0cOVJhYWFurT9nzhyFh4eruLhYR48e1fvvv6/77rtPM2fO1HvvvafY2FgPzhBAVQg7gM3169dPXbt2db7PyMjQunXrlJ6erttuu0379u1TvXr1XLZZsmSJoqOjNX36dA0YMECHDx9W27Zt1axZMw0ZMsRl3eeff15NmjSptPxSNQSimJgYxcXFadOmTS7LP/74Y5WXl2vgwIGVPqt4XxGULqVTp0769NNPNXfuXI0bN86tmgYMGKAmTZo430+cOFFZWVm65557NHDgwIDqOQPsjGEsIAClpqZqwoQJOnLkiJYsWVLp8+zsbA0YMEDp6emKjIxUdna2BVVK77zzjvr376+YmBiFhISoXbt2mjx5skpLS13WS05OVkJCgvbu3auUlBSFhYWpZcuWmjZtWqV9fv3117r99ttVv359RUdH69FHH3V72Kdnz5765JNPdObMGeey3NxctW/fXv369dPmzZtVVlbm8pnD4VCPHj0uu+8ePXooNTVV06ZNc9m/pwYPHqz7779fW7Zs0Zo1a6q9HwD/h7ADBKg//elPkqTVq1e7LN+yZYsOHjyou+++W3Xr1tUdd9yhrKysGh0rPz9f3333ncvr+++/v+x2ixYtUnh4uMaNG6e//e1v6tKliyZOnKgnnnii0ro//vij+vbtq44dO2r69OmKj4/X+PHjtXLlSuc6Z86cUVpamt5//32NHj1aTz75pDZu3Ki//OUvbp1Hz549de7cOW3ZssW5LDc3V4mJiUpMTFR+fr727Nnj8ll8fLyioqLc2v+kSZN0/Phxl3lS1VHVtQVQPYQdIEC1atVKkZGROnTokMvyJUuWKDY21tkbcdddd2nv3r369NNPq32s3r17q2nTpi6vli1bXna77OxsLVu2TH/+8581YsQIvfnmmxo+fLheeeWVSr0x33zzjaZMmaKZM2dq5MiRWrlypZo3b67XXnvNuc68efP0+eef6x//+IemTp2qRx55RB9++KFOnz7t1nmcP29HkkpKSrRlyxb16NFD7dq1U7NmzZyfFRYWavfu3W4NYVW46aablJKSohdeeKFGvTsJCQmSVOnaAqgewg4QwMLDw13uyiopKdGyZcs0aNAg5x1Vqampio6OrlHvzuzZs7VmzRqX1/k9LlU5fy5RYWGhvvvuO9100006ffq09u/fX+lczp83VLduXXXr1k1ffvmlc9l//vMftWjRQgMGDHAuCwsL04MPPujWeVx77bWKiopyBppdu3apqKjIebdVYmKicnNzJf0yl6e0tNSjsCP90rtz7NgxzZ0716PtzhceHi5Jl73jDoB7mKAMBLCffvpJ0dHRzverV6/WyZMn1a1bNx08eNC5PCUlRUuXLtXUqVNVp47n/4/TrVu3ak1Q/uyzz/TUU09p3bp1KigocPksPz/f5X2rVq2cAa1Co0aN9N///tf5/siRI7rqqqsqrXfNNde4VY/D4VBiYqI+/PBDlZWVKTc3V9HR0c67yhITE/Xyyy9LkjP0eBp2evXqpZSUFE2bNk0jRozwaNsKP/30kyQpIiKiWtsDcEXYAQLU119/rfz8fJfbvyt6b/7whz9cdJsNGza43FrtS6dOnVJSUpIaNGigZ599Vu3atVNoaKh27typ8ePHu0wElqSgoKCL7qe8vNyrdfXs2VP/+te/tHv3bud8nQqJiYl6/PHHdfToUW3atEkxMTG68sorPT7G008/reTkZL366qtq2LChx9tXzBsKpFv7ATsj7AABquJ5OX369JEkFRUV6Z133tGgQYNchnkqjBkzRllZWX4LOzk5Ofr+++/19ttvq1evXs7l//vf/6q9zzZt2mjPnj0qLy936d05cOCA2/s4f95Obm6uxo4d6/ysS5cuCgkJUU5OjrZs2aJbbrmlWnUmJSUpOTlZU6dO1cSJEz3e/sJrC6BmCDtAAFq3bp0mT56suLg4DR48WJK0YsUKFRUVadSoUbrpppsqbbN69Wq99dZbmj17tkJCQnxeY0VPzfk9M2fPntUrr7xS7X3ecsstWr16tZYvX66BAwdKkk6fPq158+a5vY+uXbsqNDRUWVlZOnr0qEvPTkhIiDp37qzZs2erqKjI4yGs802aNEnJycke1Sb9Mqn773//u37zm98oLS2t2scH8H8IO4DNrVy5Uvv371dJSYmOHz+udevWac2aNWrTpo3effddhYaGSvplCCsqKsrlH+/z3XbbbZo/f77+/e9/64477qhWDRdKTEyscpgnMTFRjRo10tChQzVmzBg5HA69/vrrNRqWeuCBB/Tyyy/rnnvu0Y4dO9SiRQu9/vrrbj+xWPpl4vONN96ojRs3KiQkRF26dKlUd8XPPtQk7CQlJSkpKUkbNmyocp3ly5crPDxcZ8+edT5BOTc3Vx07dtRbb71V7WMDcEXYAWyuYhikbt26aty4sTp06KCZM2dq2LBhzgmsJ06c0AcffKC77767yrkvaWlpCgsL05IlSzwOO1UNxSxcuLDKsBMVFaX33ntPjz32mJ566ik1atRIQ4YMUVpaWrWHZ8LCwrR27Vo9/PDDeumllxQWFqbBgwerX79+6tu3r9v76dmzpzZu3Ogctjpfjx49NH36dEVERKhjx47VqrPCpEmTLjlsWPEzHqGhoWrSpIk6deqkBQsW6I9//KNfet+A2sJR7u3ZfwAAADbCc3YAAIDRCDsAAMBohB0AAGA0wg4AADAaYQcAABiNsAMAAIwW0M/ZKSsr0zfffKOIiIhKPwwIAADsqby8XIWFhYqJianWjxN7KqDDzjfffKPY2FirywAAANWQl5enVq1a+fw4AR12Kp4em5eXpwYNGlhcDQAAcEdBQYFiY2Od/477WkCHnYqhqwYNGhB2AAAIMP6agsIEZQAAYDTCDgAAMBphBwAAGI2wAwAAjEbYAQAARiPsAAAAoxF2AACA0Qg7AADAaIQdAABgNMIOAAAwGmEHAAAYjbADAACMRtgBAABGI+wAAACjEXYAAIDRCDsAAMBohB0AAGA0wg4AADAaYQcAABiNsAMAAIxG2AEAAEYj7AAAAKMRdgAAgNEIOwAAwGiEHQAAYDTCDgAAMBphBwAAGI2wAwAAjEbYAQAARiPsAAAAoxF2AACA0Qg7AADAaIQdAABgNMIOAAAwGmEHAAAYjbADAACMRtgBAABGI+wAAACjEXYAAIDRCDsAAMBohB0AAGA0wg6AwLBhu9UVAAhQhB0AAGA0wg4AADAaYQcAABiNsAMAAIxG2AEAAEYj7AAAAKMRdgAAgNEIOwAAwGiEHQAAYDTCDgAAMBphBwAAGI2wAwAAjEbYAQAARiPsAAAAoxF2AACA0Qg7AADAaIQdAABgNMIOAAAwGmEHAAAYjbADAACMRtgBAABGI+wAAACjEXYAAIDRCDsAAMBoload0tJSTZgwQXFxcapXr57atWunyZMnq7y83MqyAACAQYKtPPjUqVM1Z84cLV68WO3bt9f27ds1bNgwRUZGasyYMVaWBgAADGFp2Pnoo4/0u9/9Tv3795cktW3bVkuXLtXWrVutLAsAABjE0mGsxMRErV27Vp9//rkkadeuXdq0aZP69et30fWLi4tVUFDg8gIAALgUS3t2nnjiCRUUFCg+Pl5BQUEqLS3VlClTNHjw4Iuun5mZqWeeecbPVQIAgEBmac/Om2++qaysLGVnZ2vnzp1avHix/vrXv2rx4sUXXT8jI0P5+fnOV15enp8rBgAAgcbSnp3HH39cTzzxhO666y5JUocOHXTkyBFlZmZq6NChldYPCQlRSEiIv8sEAAABzNKendOnT6tOHdcSgoKCVFZWZlFFAADANJb27Nx6662aMmWKWrdurfbt2+uTTz7RjBkzdN9991lZFgAAMIilYeell17ShAkT9NBDD+nEiROKiYnR8OHDNXHiRCvLAgAABnGUB/DjigsKChQZGan8/Hw1aNDA6nIA+NKG7VJSV6urAOAF/v73m9/GAgAARiPsAAAAoxF2AACA0Qg7AADAaIQdAEDVNmy3ugKgxgg7AADAaIQdAABgNMIOAAAwGmEHAAAYjbADAACMRtgBAABGI+wAAACjEXZ8hWdTAABgC4QdAABgNMIOAAAwGmEHAAAYjbADAACMRtgBAABGI+wAAACjEXYAAIDRCDsAAMBohB0AAGA0wg4AADAaYQeAb/CTKQBsgrADAACMRtgBAABGI+wAAACjEXYAuIc5OAACFGEHAAAYjbADAACMRtgBAABGI+wAAACjEXYAAIDRCDsAAMBohB0AAGA0wg4AADAaYQcAABiNsAMAAIxG2AEAAEYj7AAAAKMRdgAAgNEIOwAAwGiEHQAAYDTCDgAAMBphBwAAGI2wAwAAjEbYAQAARiPsAAAAoxF2AACA0Qg7AADAaIQdAABgNMIOAAAwGmEHAAAYjbADILBt2H7p9wBqPcIOAAAwGmEHAAAYjbADAACMRtgBAABGI+wAAACjEXYAAIDRCDv+wu2w3uWP9uSaAagNasHfdYQdAABgNMIOAAAwmuVh5+jRoxoyZIiioqJUr149dejQQdu3m9+lBgAA/CPYyoP/+OOP6tGjh1JSUrRy5Uo1bdpUX3zxhRo1amRlWQAAwCCWhp2pU6cqNjZWCxcudC6Li4uzsCIAAGAaS4ex3n33XXXt2lUDBw5UdHS0brjhBs2fP7/K9YuLi1VQUODyAgAAuBRLw86XX36pOXPm6Oqrr9b777+vkSNHasyYMVq8ePFF18/MzFRkZKTzFRsb6+eKDRNItxsGUq2wB74zAP4/S8NOWVmZOnfurOeee0433HCDHnzwQT3wwAOaO3fuRdfPyMhQfn6+85WXl+fnigEAQKCxNOy0aNFC1113ncuya6+9Vl999dVF1w8JCVGDBg1cXgAAAJdiadjp0aOHDhw44LLs888/V5s2bSyqCAAAmMbSsPPoo49q8+bNeu6553Tw4EFlZ2dr3rx5GjVqlJVlAb7BHBIAsISlYefGG2/UihUrtHTpUiUkJGjy5MmaOXOmBg8ebGVZAADAIJY+Z0eS0tPTlZ6ebnUZAADAUJb/XAQAAIAvEXb8zZN5G8zxMAPXEQAsRdgBAABGI+wAAACjEXYAAIDRCDuAp/w9B4c5PwBQI4QdAABgNMIOAAAwGmEH3sewC9zB9wSwD8P/PBJ2AACA0Qg7AADAaIQdAABgNMIOcCmGj2MDXsefGdgQYQcAABiNsAMAAIzmUdgpKirSxIkTlZCQoPDwcEVEROj666/Xs88+q9OnT/uqRgAAgGoLdnfFs2fPKikpSXv27FG/fv106623qry8XPv27dOUKVO0cuVKffjhh7riiit8WS+AQLRhu5TU1eoqANRSboedOXPm6Ouvv9auXbt0zTXXuHy2f/9+JScna+7cuXr44Ye9XiQAAEB1uT2M9fbbb2vChAmVgo4kxcfH68knn9Ty5cu9WhwAAEBNuR129u7dq+Tk5Co/T0lJ0d69e71RE1A93PIK/II/C4ALt8POqVOnFBUVVeXnUVFRys/P90pRAAAA3uJ22CkrK1NQUFDVO6pTR6WlpV4pCgAAwFvcnqBcXl6utLQ0BQdffJOSkhKvFQUAAOAtboedp59++rLr3HnnnTUqplbillwAqF34e9/vvBp2AAAA7IafiwAAAEZzu2cnJSVFDofjkus4HA6tXbu2xkUBAAB4i9thp1OnTlV+VlhYqOzsbBUXF3ujJtRWNRnHrulzRRhD9w7aEYEiEL+r/qg5ENvFDW6HnRdffLHSspKSEs2ePVtTpkxRy5YtNXnyZK8WBwAAUFNuh50LZWVlaeLEiTpz5owmTZqkBx98sMrb0gEAAKzi8QTlVatWqVOnTnrooYd077336osvvtBDDz1UO4IOj2C/PH+2kQnXw4RzgDn4PgaemlyzWnS93U4oW7du1fjx47V582aNGDFCH3zwgZo0aeLL2gAAAGrM7bDTvXt31atXTyNGjFBcXJyys7Mvut6YMWO8VhwAAEBNuR12WrduLYfDoX/+859VruNwOAg7AADAVtwOO4cPH/ZhGUAtYuitnYALvuewEZ6gDAAAjOZ2z86sWbPcWo9hLAAAYCc1eqjghZizAwAA7MbtsLNu3TrFxcX5spbAwng0AAABwe05O+3atVNcXJzuu+8+LVmyREePHvVlXQAAAF7hUc9OTk6OcnJytHTpUp09e1ZXXnmlUlNTlZKSopSUFDVr1syXtQIAAHjM7bCTnJys5ORkSdLPP/+sjz76yBl+Fi9erHPnzik+Pl6fffaZr2oFAADwWLVuPQ8NDVVqaqqeeuopPfPMMxozZozCw8O1f/9+b9cHwGS16Ld5PGbHtjGhJm+dg7fbwo5taxCPfr3z7Nmz2rx5s9avX6+cnBxt2bJFsbGx6tWrl15++WUlJSX5qk4AAIBqcTvspKamasuWLYqLi1NSUpKGDx+u7OxstWjRwpf1AQAA1Ijbw1gbN25UVFSUUlNTlZaWpptvvpmgA8A/6OL3PTu0sR1qgJHcDjunTp3SvHnzFBYWpqlTpyomJkYdOnTQ6NGjtXz5cp08edKXdQIAAFSL28NY9evXV9++fdW3b19JUmFhoTZt2qT169dr2rRpGjx4sK6++mrt2bPHZ8UCAAB4qto/BFq/fn01btxYjRs3VqNGjRQcHKx9+/Z5szYAAIAaczvslJWVaevWrZo2bZr69eunhg0bKjExUa+88oqaN2+u2bNn68svv/RlrfbD+HJg4/q5J1Daqao6rag/UNoMqCXcHsZq2LChioqK1Lx5c6WkpOjFF19UcnKy2rVr58v6AAAAasTtsPPCCy8oJSVFv/rVr3xZDwAAgFe5HXaGDx/uyzoAAAB8otoTlAHgspi7AsAGCDsAAMBohB0AAGA0wk5twFACLuZy34va+qvO/qozUNoDrmrDdTPwHAk7AADAaIQdAABgNMIOAAAwGmEHgcfA8WT4ibvzlPw9n8nuAuV8A6XOCv6uN9Dax4sIOwAAwGiEHQAAYDTbhJ3nn39eDodDY8eOtboUAABgEFuEnW3btunVV1/V9ddfb3UpgacWj8H6HW0NK/C9A2rM8rDz008/afDgwZo/f74aNWpkdTkAAMAwloedUaNGqX///urdu7fVpQAAAAMFW3nwN954Qzt37tS2bdvcWr+4uFjFxcXO9wUFBb4qDQAAGMKynp28vDw98sgjysrKUmhoqFvbZGZmKjIy0vmKjY31cZUWYpy+9uLa24e3rgXX1H20lW9U1a61pL0tCzs7duzQiRMn1LlzZwUHBys4OFgbNmzQrFmzFBwcrNLS0krbZGRkKD8/3/nKy8uzoHIAABBILBvGSktL0+7du12WDRs2TPHx8Ro/fryCgoIqbRMSEqKQkBB/lQgAAAxgWc9ORESEEhISXF7169dXVFSUEhISrCoLUq3p1pTkm3OtTe1XXVa0EdfFXFxbXIbld2MBAAD4kqV3Y10oJyfH6hIAAIBh6NkBAABGI+wAwKWYOh+kuudlanvYAW3rM4QdAABgNMIOAAAwGmEHAAAYjbCDy2Mc2XrnX4NLXQ9vXCuuN0xn1XecP1uWIewAAACjEXYAAIDRCDvVQVekbwVq+wZq3fCtiu9Fbfx+WP2zILW57eGCsAMAAIxG2AEAAEYj7AAAAKMRdnzJ6nFiq49fE4FcO+ApE77vdjoHO9US6AxpS8IOAAAwGmEHAAAYjbADAACMRthxh7tjljUZ26zOthfbxp392GUM1i51VFeg1w9z8F20HtfA1gg7AADAaIQdAABgNMIO4Et0bdtfTa8R1ziw+eL68Z2yHcIOAAAwGmEHAAAYjbADAACMRtgBUDt5c15EVfuy09wLu9RilzrcFUiP80CVCDsAAMBohB0AAGA0wg4AADAaYcfb/P2TEedvx7ix+wKlrXxVZ6Ccf03VlvOs4On5BurfHZ7Ua4dzs0MNFexUix8RdgAAgNEIOwAAwGiEHQAAYDTCjq/ZaXzU6lqsOL6/j2l1G1ewSx12V512om3NdKnrasffz4JHCDsAAMBohB0AAGA0wo7p6Co1XyD8VMHlBFKtdsKjCXC+ml43g687YQcAABiNsAMAAIxG2AEAAEYj7MAzBo/pVpud28TOteHiAu2aBVq9F2PXW8tNaFubIOwAAACjEXYAAIDRCDsAAMBohJ2aqhhT9XRs1ZdjsYH2CPzaPi5d28//ckxrHyuehWJaG/qSJ21l93a1e31+RNgBAABGI+wAAACjEXbs5sJuxw3b7fFr4XSH2ps/h0ZqcqxA/x5ZVb+3jhvo7W+lmv4sS3Xb/lJTJbiebiPsAAAAoxF2AACA0Qg7AADAaIQdf/LGPBgrbluF/9n18fWm8OWjIgJ9Xk8gqY3njGoh7AAAAKMRdgAAgNEIOwAAwGiEHcCfmGPgWzV9lok3j3+pfXrjeHyXrOPrZ+vA6wg7AADAaIQdAABgNMIOAAAwGmHnUuw63mrXuuAqEJ7NEohoK/fZoa3s8twhO7QFLEPYAQAARiPsAAAAoxF24IquX2uHn3z5MwY1cbHjBOp3w251V9RzudvW3b2t3V/sUIMvWfFzPvAZwg4AADAaYQcAABjN0rCTmZmpG2+8UREREYqOjtbtt9+uAwcOWFkSAAAwjKVhZ8OGDRo1apQ2b96sNWvW6Ny5c/rtb3+roqIiK8uynj/Hfe0yxuzrOuxynlYJlPMPlDprg9p8Lfx97ibNibOpYCsPvmrVKpf3ixYtUnR0tHbs2KFevXpZVBUAADCJrebs5OfnS5IaN25scSUAAMAUlvbsnK+srExjx45Vjx49lJCQcNF1iouLVVxc7HxfUFDgr/IAAECAsk3PzqhRo7Rnzx698cYbVa6TmZmpyMhI5ys2NtaPFRrMG2PDvhhfdmefG7ZXvZ6dx7x9WZs3npVk57YDahv+PNaYLcLO6NGj9d5772n9+vVq1apVletlZGQoPz/f+crLy/NjlQAAIBBZOoxVXl6uhx9+WCtWrFBOTo7i4uIuuX5ISIhCQkL8VB0AADCBpT07o0aN0pIlS5Sdna2IiAgdO3ZMx44d05kzZ6wsq3aoabeoJ4+29/ax/SEQarQTK9qLa2QOriV8zNKwM2fOHOXn5ys5OVktWrRwvpYtW2ZlWQAAwCCWD2MBAAD4ki0mKAMAAPgKYQeeu9x8HTvjNmzfoZ2sEYiPXjhfoNSJgEbYAQAARiPsAAAAoxF2AACA0Qg78D1/jslXHIt5AJ6jzTxHm3mPu3MBafNLo30uirADAACMRtgBAABGI+x4ysouwtraPVlbz9vOLndNuGa1E98L2BRhBwAAGI2wAwAAjEbYAQAARiPsIHDUdLzfhPkCJpwDAPgZYQcAABiNsAMAAIxG2AEAAEYj7MB3AnF+SSDWbDXaDNXlzndnw3a+Y9VBm7kg7AAAAKMRdgAAgNEIOwAAwGiEHXcx/ulddmxPd+cP2IE367DLObnjwloDqXa4qs6143pX3QaeLq/JsQIQYQcAABiNsAMAAIxG2AFgXwZ1owOwDmEHAAAYjbADAACMRtgBAABGI+zAtyrmXDD3Ap7iO2N/XCPr0PYeIewAAACjEXYAAIDRCDsAAMBohB3AKlaNudt1rN+udZmItkYtQ9gBAABGI+wAAACjEXYAVB/DIbWHFdea75fv1LK2JewAAACjEXYAAIDRCDsAAMBohB0AwMXVsnkdMBdhBwAAGI2wAwAAjEbYAQAARiPsAAAAoxF2AACA0Qg7AADAaIQdAIDvcRs7LETYAQAARiPsAAAAoxF2AACA0Qg7AOyH+R0AvIiwAwAAjEbYAQAARiPsAAAAoxF2AACA0Qg7AADAaIQdAABgNMIOAAAwGmEHAAAYjbADAACMRtgBAABGI+wAAACjEXYAAIDRCDsAAMBotgg7s2fPVtu2bRUaGqpf//rX2rp1q9UlAQAAQ1gedpYtW6Zx48bp6aef1s6dO9WxY0f16dNHJ06csLo0AABgAMvDzowZM/TAAw9o2LBhuu666zR37lyFhYVpwYIFVpcGAAAMYGnYOXv2rHbs2KHevXs7l9WpU0e9e/fWxx9/bGFlAADAFMFWHvy7775TaWmpmjVr5rK8WbNm2r9/f6X1i4uLVVxc7Hyfn58vSSooKPBNgUU/SQUFv/z3Ui5cp6bvOYa1xwjUujmG+XVzDPPrtuMxfPBvbMW/2+Xl5V7f98VYGnY8lZmZqWeeeabS8tjYWAuqAQAANVFYWKjIyEifH8fSsNOkSRMFBQXp+PHjLsuPHz+u5s2bV1o/IyND48aNc74vKyvTDz/8oKioKDkcDq/WduDAAXXr1s2r+wQAINCsW7dOXbp08eo+y8vLVVhYqJiYGK/utyqWhp26deuqS5cuWrt2rW6//XZJvwSYtWvXavTo0ZXWDwkJUUhIiMuyhg0b+qS28PBwn+wXAIBAEh4ergYNGnh9v/7o0alg+TDWuHHjNHToUHXt2lXdunXTzJkzVVRUpGHDhlldGgAAMIDlYWfQoEE6efKkJk6cqGPHjqlTp05atWpVpUnLAAAA1eEo99dU6ABz8uRJde7cWaWlpZJ+GV8sKChQgwYN5HA4PH7vjX1wDHsfI1Dr5hjm180xzK/bV8coKirS3r171apVK6/9+2oFwg4AADCa5U9QBgAA8CXCDgAAMBphBwAAGI2wAwAAjGb5redXX321Dh48aHUZAAAgAISGhurMmTMebWN5z86RI0e8/lMPAADATD///PNFfyfzUmx363lubq569uxpdRkAAMCGgoKCFBERoR9//NHtbSzv2bnQoUOHrC4BAADYVIsWLXTq1CmdO3fO7W1s1bNz9uxZhYWFOZ9aDAAAcL7g4GCVlJTo0KFDuvLKK93axlY9O82bNyfoAACAKpWUlEiS6tRxP8LYpmcnKipKP/zwg9VlAACAAFBaWup24LG8Z6e0tFQNGzYk6AAAgEuquHu7adOmHvXsWB52mjZtqvz8fKvLAAAANlcxGDV27FiPtrN8GItn7AAAAE+0adNGhw8fdnt9y5+gbJMpQwAAwFCWD2MBAAD4EmEHAAAYjbADAACMRtgBAABGI+wAAACjEXYAAIDRCDsAAMBohB0AAGA0wg4An7j33nvlcDjkcDh0xRVXqFmzZrr55pu1YMEClZWVVVq/T58+CgoK0rZt2yRJhw8fdm5f1WvRokXKycmp8vNjx475+7QB2BBhB4DP9O3bV99++60OHz6slStXKiUlRY888ojS09NVUlLiXO+rr77SRx99pNGjR2vBggWSpNjYWH377bfO12OPPab27du7LBs0aJBzHwcOHHD57Ntvv1V0dLTfzxmA/Vj+cxEAzBUSEqLmzZtLklq2bKnOnTure/fuSktL06JFi3T//fdLkhYuXKj09HSNHDlS3bt314wZM1SvXj3ntpIUHh6u4OBgl2Xni46OVsOGDX1+TgACDz07APwqNTVVHTt21Ntvvy3pl9/HW7hwoYYMGaL4+HhdddVVWr58ucVVAjAJYQeA38XHxzt/sfiDDz7Q6dOn1adPH0nSkCFD9Nprr3m8z1atWik8PNz5at++vTdLBhDAGMYC4Hfl5eVyOBySpAULFmjQoEEKDv7lr6O7775bjz/+uA4dOqR27dq5vc+NGzcqIiLC+f6KK67wbtEAAhZhB4Df7du3T3Fxcfrhhx+0YsUKnTt3TnPmzHF+XlpaqgULFmjKlClu7zMuLo45OwAuimEsAH61bt067d69W3feeaeysrLUqlUr7dq1S59++qnzNX36dC1atEilpaVWlwvAAPTsAPCZ4uJiHTt2TKWlpTp+/LhWrVqlzMxMpaen65577lGXLl00YMAAJSQkuGwXGxurjIwMrVq1Sv3793frWCdOnNDPP//ssiwqKorhLACEHQC+s2rVKrVo0ULBwcFq1KiROnbsqFmzZmno0KH65JNPtGvXLs2fP7/SdpGRkUpLS9Nrr73mdti55pprKi37+OOP1b179xqfB4DA5igvLy+3uggAAABfYc4OAAAwGmEHAAAYjbADAACMRtgBAABGI+wAAACjEXYAAIDRCDsAAMBohB0AAGA0wg4AADAaYQcAABiNsAMAAIxG2AEAAEb7f8bTBQI08fTjAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df=pd.DataFrame(a)\n",
    "df['wind'].value_counts()\n",
    "plt.bar(df['date'],df['wind'],color='pink')\n",
    "plt.xlabel('DATE')\n",
    "plt.ylabel('WIND')\n",
    "plt.title('DATE and WIND')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "b034ccfe",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-11-23T09:57:08.878920Z",
     "iopub.status.busy": "2023-11-23T09:57:08.877529Z",
     "iopub.status.idle": "2023-11-23T09:57:09.082587Z",
     "shell.execute_reply": "2023-11-23T09:57:09.081036Z"
    },
    "papermill": {
     "duration": 0.248084,
     "end_time": "2023-11-23T09:57:09.087658",
     "exception": false,
     "start_time": "2023-11-23T09:57:08.839574",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Weather Condition Distribution')"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df = pd.DataFrame(a)\n",
    "\n",
    "# Count the frequency of each weather condition\n",
    "weather = df['weather condition'].value_counts()\n",
    "\n",
    "# Plot the pie chart\n",
    "plt.pie(weather, labels=weather.index, autopct='%d%%', startangle=45, colors=['blue', 'lightgreen','pink','yellow','red'])\n",
    "plt.title('Weather Condition Distribution')\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 1868601,
     "sourceId": 3051857,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30587,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 39.503251,
   "end_time": "2023-11-23T09:57:10.271769",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2023-11-23T09:56:30.768518",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
